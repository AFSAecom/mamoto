database_state_json
"{""rls"":[{""table"":""admins"",""rls_forced"":false,""rls_enabled"":false},{""table"":""brands"",""rls_forced"":false,""rls_enabled"":false},{""table"":""moto_images"",""rls_forced"":false,""rls_enabled"":true},{""table"":""moto_spec_values"",""rls_forced"":false,""rls_enabled"":true},{""table"":""motos"",""rls_forced"":false,""rls_enabled"":true},{""table"":""spec_groups"",""rls_forced"":false,""rls_enabled"":true},{""table"":""spec_items"",""rls_forced"":false,""rls_enabled"":true}],""stats"":[{""table"":""moto_images"",""column"":""alt"",""n_distinct"":-1},{""table"":""moto_images"",""column"":""id"",""n_distinct"":-1},{""table"":""moto_images"",""column"":""is_primary"",""n_distinct"":2},{""table"":""moto_images"",""column"":""moto_id"",""n_distinct"":-0.604167},{""table"":""moto_images"",""column"":""path"",""n_distinct"":-1},{""table"":""moto_images"",""column"":""sort_order"",""n_distinct"":2},{""table"":""moto_images"",""column"":""url"",""n_distinct"":0},{""table"":""moto_spec_values"",""column"":""moto_id"",""n_distinct"":30},{""table"":""moto_spec_values"",""column"":""spec_item_id"",""n_distinct"":62},{""table"":""moto_spec_values"",""column"":""unit_override"",""n_distinct"":0},{""table"":""moto_spec_values"",""column"":""updated_at"",""n_distinct"":3},{""table"":""moto_spec_values"",""column"":""value_boolean"",""n_distinct"":2},{""table"":""moto_spec_values"",""column"":""value_json"",""n_distinct"":0},{""table"":""moto_spec_values"",""column"":""value_number"",""n_distinct"":-0.168558},{""table"":""moto_spec_values"",""column"":""value_text"",""n_distinct"":-0.139924},{""table"":""motos"",""column"":""brand_id"",""n_distinct"":-0.333333},{""table"":""motos"",""column"":""brand_name"",""n_distinct"":-0.333333},{""table"":""motos"",""column"":""created_at"",""n_distinct"":3},{""table"":""motos"",""column"":""featured"",""n_distinct"":1},{""table"":""motos"",""column"":""id"",""n_distinct"":-1},{""table"":""motos"",""column"":""model_name"",""n_distinct"":-1},{""table"":""motos"",""column"":""price_tnd"",""n_distinct"":-0.766667},{""table"":""motos"",""column"":""updated_at"",""n_distinct"":3},{""table"":""motos"",""column"":""year"",""n_distinct"":2},{""table"":""motos_expr_idx"",""column"":""expr"",""n_distinct"":-1},{""table"":""spec_items"",""column"":""data_type"",""n_distinct"":3},{""table"":""spec_items"",""column"":""group_id"",""n_distinct"":-0.177419},{""table"":""spec_items"",""column"":""id"",""n_distinct"":-1},{""table"":""spec_items"",""column"":""is_optional"",""n_distinct"":2},{""table"":""spec_items"",""column"":""key"",""n_distinct"":-1},{""table"":""spec_items"",""column"":""label"",""n_distinct"":-1},{""table"":""spec_items"",""column"":""sort_order"",""n_distinct"":-0.16129},{""table"":""spec_items"",""column"":""unit"",""n_distinct"":-0.209677}],""views"":[{""view"":""v_models"",""schema"":""public"",""definition"":"" SELECT brand_id,\n    COALESCE((to_jsonb(m.*) ->> 'model'::text), (to_jsonb(m.*) ->> 'model_name'::text), (to_jsonb(m.*) ->> 'name'::text)) AS model_name\n   FROM motos m\n  WHERE (COALESCE((to_jsonb(m.*) ->> 'model'::text), (to_jsonb(m.*) ->> 'model_name'::text), (to_jsonb(m.*) ->> 'name'::text)) IS NOT NULL);""},{""view"":""v_moto_cards"",""schema"":""public"",""definition"":"" SELECT m.id,\n    b.name AS brand,\n    m.model_name AS model,\n    m.year,\n    m.price_tnd,\n    COALESCE(( SELECT mi.path\n           FROM moto_images mi\n          WHERE (mi.moto_id = m.id)\n          ORDER BY mi.is_primary DESC, mi.sort_order\n         LIMIT 1), NULL::text) AS primary_image_path\n   FROM (motos m\n     LEFT JOIN brands b ON ((b.id = m.brand_id)));""},{""view"":""vw_spec_facets"",""schema"":""public"",""definition"":"" WITH base AS (\n         SELECT si.id AS item_id,\n            si.key AS item_key,\n            si.label AS item_label,\n            si.unit AS item_unit,\n            si.data_type AS item_type,\n            si.group_id,\n            COALESCE(g.name, 'Autres'::text) AS group_name,\n            g.sort_order AS group_sort,\n            si.sort_order AS item_sort\n           FROM (spec_items si\n             LEFT JOIN spec_groups g ON ((g.id = si.group_id)))\n        ), nums AS (\n         SELECT mv.spec_item_id AS item_id,\n            min(mv.value_number) AS min_val,\n            max(mv.value_number) AS max_val\n           FROM moto_spec_values mv\n          WHERE (mv.value_number IS NOT NULL)\n          GROUP BY mv.spec_item_id\n        ), bools AS (\n         SELECT mv.spec_item_id AS item_id,\n            jsonb_build_object('true', count(*) FILTER (WHERE (mv.value_boolean IS TRUE)), 'false', count(*) FILTER (WHERE (mv.value_boolean IS FALSE))) AS dist_bool\n           FROM moto_spec_values mv\n          WHERE (mv.value_boolean IS NOT NULL)\n          GROUP BY mv.spec_item_id\n        ), texts AS (\n         SELECT t.spec_item_id AS item_id,\n            jsonb_agg(jsonb_build_object('value', t.value_text, 'count', t.cnt) ORDER BY t.cnt DESC, t.value_text) AS dist_text\n           FROM ( SELECT moto_spec_values.spec_item_id,\n                    moto_spec_values.value_text,\n                    count(*) AS cnt\n                   FROM moto_spec_values\n                  WHERE ((moto_spec_values.value_text IS NOT NULL) AND (moto_spec_values.value_text <> ''::text))\n                  GROUP BY moto_spec_values.spec_item_id, moto_spec_values.value_text\n                  ORDER BY (count(*)) DESC\n                 LIMIT 1000) t\n          GROUP BY t.spec_item_id\n        )\n SELECT b.group_name,\n    b.group_sort,\n    b.item_id,\n    b.item_key,\n    b.item_label,\n    b.item_unit,\n    b.item_type,\n    b.item_sort,\n    n.min_val,\n    n.max_val,\n    bo.dist_bool,\n    tx.dist_text\n   FROM (((base b\n     LEFT JOIN nums n ON ((n.item_id = b.item_id)))\n     LEFT JOIN bools bo ON ((bo.item_id = b.item_id)))\n     LEFT JOIN texts tx ON ((tx.item_id = b.item_id)))\n  ORDER BY b.group_sort, b.group_name, b.item_sort, b.item_label;""}],""tables"":[{""table"":""moto_spec_values"",""schema"":""public"",""relkind"":""r"",""table_bytes"":147456,""total_bytes"":974848,""indexes_bytes"":786432,""estimated_rows"":1851},{""table"":""motos"",""schema"":""public"",""relkind"":""r"",""table_bytes"":8192,""total_bytes"":286720,""indexes_bytes"":270336,""estimated_rows"":30},{""table"":""moto_images"",""schema"":""public"",""relkind"":""r"",""table_bytes"":8192,""total_bytes"":98304,""indexes_bytes"":81920,""estimated_rows"":48},{""table"":""brands"",""schema"":""public"",""relkind"":""r"",""table_bytes"":8192,""total_bytes"":81920,""indexes_bytes"":65536,""estimated_rows"":10},{""table"":""spec_items"",""schema"":""public"",""relkind"":""r"",""table_bytes"":8192,""total_bytes"":81920,""indexes_bytes"":65536,""estimated_rows"":62},{""table"":""spec_groups"",""schema"":""public"",""relkind"":""r"",""table_bytes"":8192,""total_bytes"":65536,""indexes_bytes"":49152,""estimated_rows"":11},{""table"":""admins"",""schema"":""public"",""relkind"":""r"",""table_bytes"":8192,""total_bytes"":32768,""indexes_bytes"":16384,""estimated_rows"":-1}],""columns"":[{""udt"":""uuid"",""name"":""user_id"",""table"":""admins"",""schema"":""public"",""default"":null,""nullable"":""NO"",""position"":1,""data_type"":""uuid"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""timestamptz"",""name"":""created_at"",""table"":""admins"",""schema"":""public"",""default"":""now()"",""nullable"":""NO"",""position"":2,""data_type"":""timestamp with time zone"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""note"",""table"":""admins"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":3,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""uuid"",""name"":""id"",""table"":""brands"",""schema"":""public"",""default"":""uuid_generate_v4()"",""nullable"":""NO"",""position"":1,""data_type"":""uuid"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""name"",""table"":""brands"",""schema"":""public"",""default"":null,""nullable"":""NO"",""position"":2,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""slug"",""table"":""brands"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":3,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""uuid"",""name"":""id"",""table"":""moto_images"",""schema"":""public"",""default"":""uuid_generate_v4()"",""nullable"":""NO"",""position"":1,""data_type"":""uuid"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""uuid"",""name"":""moto_id"",""table"":""moto_images"",""schema"":""public"",""default"":null,""nullable"":""NO"",""position"":2,""data_type"":""uuid"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""url"",""table"":""moto_images"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":3,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""alt"",""table"":""moto_images"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":4,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""int4"",""name"":""sort_order"",""table"":""moto_images"",""schema"":""public"",""default"":""0"",""nullable"":""NO"",""position"":5,""data_type"":""integer"",""char_max_len"":null,""numeric_scale"":0,""numeric_precision"":32},{""udt"":""bool"",""name"":""is_primary"",""table"":""moto_images"",""schema"":""public"",""default"":""false"",""nullable"":""NO"",""position"":6,""data_type"":""boolean"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""path"",""table"":""moto_images"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":7,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""uuid"",""name"":""moto_id"",""table"":""moto_spec_values"",""schema"":""public"",""default"":null,""nullable"":""NO"",""position"":1,""data_type"":""uuid"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""uuid"",""name"":""spec_item_id"",""table"":""moto_spec_values"",""schema"":""public"",""default"":null,""nullable"":""NO"",""position"":2,""data_type"":""uuid"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""value_text"",""table"":""moto_spec_values"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":3,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""numeric"",""name"":""value_number"",""table"":""moto_spec_values"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":4,""data_type"":""numeric"",""char_max_len"":null,""numeric_scale"":6,""numeric_precision"":18},{""udt"":""bool"",""name"":""value_boolean"",""table"":""moto_spec_values"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":5,""data_type"":""boolean"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""jsonb"",""name"":""value_json"",""table"":""moto_spec_values"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":6,""data_type"":""jsonb"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""unit_override"",""table"":""moto_spec_values"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":7,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""timestamptz"",""name"":""updated_at"",""table"":""moto_spec_values"",""schema"":""public"",""default"":""now()"",""nullable"":""NO"",""position"":8,""data_type"":""timestamp with time zone"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""uuid"",""name"":""id"",""table"":""motos"",""schema"":""public"",""default"":""uuid_generate_v4()"",""nullable"":""NO"",""position"":1,""data_type"":""uuid"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""uuid"",""name"":""brand_id"",""table"":""motos"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":2,""data_type"":""uuid"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""brand_name"",""table"":""motos"",""schema"":""public"",""default"":null,""nullable"":""NO"",""position"":3,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""model_name"",""table"":""motos"",""schema"":""public"",""default"":null,""nullable"":""NO"",""position"":4,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""int4"",""name"":""year"",""table"":""motos"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":5,""data_type"":""integer"",""char_max_len"":null,""numeric_scale"":0,""numeric_precision"":32},{""udt"":""numeric"",""name"":""price_tnd"",""table"":""motos"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":6,""data_type"":""numeric"",""char_max_len"":null,""numeric_scale"":2,""numeric_precision"":12},{""udt"":""bool"",""name"":""featured"",""table"":""motos"",""schema"":""public"",""default"":""false"",""nullable"":""NO"",""position"":7,""data_type"":""boolean"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""timestamptz"",""name"":""created_at"",""table"":""motos"",""schema"":""public"",""default"":""now()"",""nullable"":""NO"",""position"":8,""data_type"":""timestamp with time zone"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""timestamptz"",""name"":""updated_at"",""table"":""motos"",""schema"":""public"",""default"":""now()"",""nullable"":""NO"",""position"":9,""data_type"":""timestamp with time zone"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""uuid"",""name"":""id"",""table"":""spec_groups"",""schema"":""public"",""default"":""uuid_generate_v4()"",""nullable"":""NO"",""position"":1,""data_type"":""uuid"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""name"",""table"":""spec_groups"",""schema"":""public"",""default"":null,""nullable"":""NO"",""position"":2,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""int4"",""name"":""sort_order"",""table"":""spec_groups"",""schema"":""public"",""default"":""0"",""nullable"":""NO"",""position"":3,""data_type"":""integer"",""char_max_len"":null,""numeric_scale"":0,""numeric_precision"":32},{""udt"":""uuid"",""name"":""id"",""table"":""spec_items"",""schema"":""public"",""default"":""uuid_generate_v4()"",""nullable"":""NO"",""position"":1,""data_type"":""uuid"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""uuid"",""name"":""group_id"",""table"":""spec_items"",""schema"":""public"",""default"":null,""nullable"":""NO"",""position"":2,""data_type"":""uuid"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""key"",""table"":""spec_items"",""schema"":""public"",""default"":null,""nullable"":""NO"",""position"":3,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""label"",""table"":""spec_items"",""schema"":""public"",""default"":null,""nullable"":""NO"",""position"":4,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""unit"",""table"":""spec_items"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":5,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""data_type"",""table"":""spec_items"",""schema"":""public"",""default"":null,""nullable"":""NO"",""position"":6,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""int4"",""name"":""sort_order"",""table"":""spec_items"",""schema"":""public"",""default"":""0"",""nullable"":""NO"",""position"":7,""data_type"":""integer"",""char_max_len"":null,""numeric_scale"":0,""numeric_precision"":32},{""udt"":""bool"",""name"":""is_optional"",""table"":""spec_items"",""schema"":""public"",""default"":""true"",""nullable"":""NO"",""position"":8,""data_type"":""boolean"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""uuid"",""name"":""brand_id"",""table"":""v_models"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":1,""data_type"":""uuid"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""model_name"",""table"":""v_models"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":2,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""uuid"",""name"":""id"",""table"":""v_moto_cards"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":1,""data_type"":""uuid"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""brand"",""table"":""v_moto_cards"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":2,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""model"",""table"":""v_moto_cards"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":3,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""int4"",""name"":""year"",""table"":""v_moto_cards"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":4,""data_type"":""integer"",""char_max_len"":null,""numeric_scale"":0,""numeric_precision"":32},{""udt"":""numeric"",""name"":""price_tnd"",""table"":""v_moto_cards"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":5,""data_type"":""numeric"",""char_max_len"":null,""numeric_scale"":2,""numeric_precision"":12},{""udt"":""text"",""name"":""primary_image_path"",""table"":""v_moto_cards"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":6,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""group_name"",""table"":""vw_spec_facets"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":1,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""int4"",""name"":""group_sort"",""table"":""vw_spec_facets"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":2,""data_type"":""integer"",""char_max_len"":null,""numeric_scale"":0,""numeric_precision"":32},{""udt"":""uuid"",""name"":""item_id"",""table"":""vw_spec_facets"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":3,""data_type"":""uuid"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""item_key"",""table"":""vw_spec_facets"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":4,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""item_label"",""table"":""vw_spec_facets"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":5,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""item_unit"",""table"":""vw_spec_facets"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":6,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""text"",""name"":""item_type"",""table"":""vw_spec_facets"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":7,""data_type"":""text"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""int4"",""name"":""item_sort"",""table"":""vw_spec_facets"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":8,""data_type"":""integer"",""char_max_len"":null,""numeric_scale"":0,""numeric_precision"":32},{""udt"":""numeric"",""name"":""min_val"",""table"":""vw_spec_facets"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":9,""data_type"":""numeric"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""numeric"",""name"":""max_val"",""table"":""vw_spec_facets"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":10,""data_type"":""numeric"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""jsonb"",""name"":""dist_bool"",""table"":""vw_spec_facets"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":11,""data_type"":""jsonb"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null},{""udt"":""jsonb"",""name"":""dist_text"",""table"":""vw_spec_facets"",""schema"":""public"",""default"":null,""nullable"":""YES"",""position"":12,""data_type"":""jsonb"",""char_max_len"":null,""numeric_scale"":null,""numeric_precision"":null}],""indexes"":[{""index"":""admins_pkey"",""table"":""admins"",""is_unique"":true,""definition"":""CREATE UNIQUE INDEX admins_pkey ON public.admins USING btree (user_id)"",""is_primary"":true},{""index"":""brands_name_key"",""table"":""brands"",""is_unique"":true,""definition"":""CREATE UNIQUE INDEX brands_name_key ON public.brands USING btree (name)"",""is_primary"":false},{""index"":""brands_pkey"",""table"":""brands"",""is_unique"":true,""definition"":""CREATE UNIQUE INDEX brands_pkey ON public.brands USING btree (id)"",""is_primary"":true},{""index"":""brands_slug_idx"",""table"":""brands"",""is_unique"":false,""definition"":""CREATE INDEX brands_slug_idx ON public.brands USING btree (slug)"",""is_primary"":false},{""index"":""idx_brands_name"",""table"":""brands"",""is_unique"":false,""definition"":""CREATE INDEX idx_brands_name ON public.brands USING btree (name)"",""is_primary"":false},{""index"":""moto_images_moto_id_is_primary_sort_order_idx"",""table"":""moto_images"",""is_unique"":false,""definition"":""CREATE INDEX moto_images_moto_id_is_primary_sort_order_idx ON public.moto_images USING btree (moto_id, is_primary, sort_order)"",""is_primary"":false},{""index"":""moto_images_moto_sort_ix"",""table"":""moto_images"",""is_unique"":false,""definition"":""CREATE INDEX moto_images_moto_sort_ix ON public.moto_images USING btree (moto_id, is_primary DESC, sort_order)"",""is_primary"":false},{""index"":""moto_images_pkey"",""table"":""moto_images"",""is_unique"":true,""definition"":""CREATE UNIQUE INDEX moto_images_pkey ON public.moto_images USING btree (id)"",""is_primary"":true},{""index"":""uq_moto_images_moto_path"",""table"":""moto_images"",""is_unique"":true,""definition"":""CREATE UNIQUE INDEX uq_moto_images_moto_path ON public.moto_images USING btree (moto_id, path)"",""is_primary"":false},{""index"":""uq_moto_primary"",""table"":""moto_images"",""is_unique"":true,""definition"":""CREATE UNIQUE INDEX uq_moto_primary ON public.moto_images USING btree (moto_id) WHERE (is_primary = true)"",""is_primary"":false},{""index"":""idx_msv_item_bool"",""table"":""moto_spec_values"",""is_unique"":false,""definition"":""CREATE INDEX idx_msv_item_bool ON public.moto_spec_values USING btree (spec_item_id, value_boolean)"",""is_primary"":false},{""index"":""idx_msv_item_num"",""table"":""moto_spec_values"",""is_unique"":false,""definition"":""CREATE INDEX idx_msv_item_num ON public.moto_spec_values USING btree (spec_item_id, value_number)"",""is_primary"":false},{""index"":""idx_msv_item_text"",""table"":""moto_spec_values"",""is_unique"":false,""definition"":""CREATE INDEX idx_msv_item_text ON public.moto_spec_values USING btree (spec_item_id, value_text)"",""is_primary"":false},{""index"":""idx_msv_moto"",""table"":""moto_spec_values"",""is_unique"":false,""definition"":""CREATE INDEX idx_msv_moto ON public.moto_spec_values USING btree (moto_id)"",""is_primary"":false},{""index"":""idx_msv_spec_bool"",""table"":""moto_spec_values"",""is_unique"":false,""definition"":""CREATE INDEX idx_msv_spec_bool ON public.moto_spec_values USING btree (spec_item_id, value_boolean)"",""is_primary"":false},{""index"":""idx_msv_spec_num"",""table"":""moto_spec_values"",""is_unique"":false,""definition"":""CREATE INDEX idx_msv_spec_num ON public.moto_spec_values USING btree (spec_item_id, value_number)"",""is_primary"":false},{""index"":""idx_msv_spec_text"",""table"":""moto_spec_values"",""is_unique"":false,""definition"":""CREATE INDEX idx_msv_spec_text ON public.moto_spec_values USING btree (spec_item_id, value_text)"",""is_primary"":false},{""index"":""moto_spec_values_item_id_idx"",""table"":""moto_spec_values"",""is_unique"":false,""definition"":""CREATE INDEX moto_spec_values_item_id_idx ON public.moto_spec_values USING btree (spec_item_id)"",""is_primary"":false},{""index"":""moto_spec_values_item_ix"",""table"":""moto_spec_values"",""is_unique"":false,""definition"":""CREATE INDEX moto_spec_values_item_ix ON public.moto_spec_values USING btree (spec_item_id)"",""is_primary"":false},{""index"":""moto_spec_values_moto_ix"",""table"":""moto_spec_values"",""is_unique"":false,""definition"":""CREATE INDEX moto_spec_values_moto_ix ON public.moto_spec_values USING btree (moto_id)"",""is_primary"":false},{""index"":""moto_spec_values_pkey"",""table"":""moto_spec_values"",""is_unique"":true,""definition"":""CREATE UNIQUE INDEX moto_spec_values_pkey ON public.moto_spec_values USING btree (moto_id, spec_item_id)"",""is_primary"":true},{""index"":""moto_spec_values_value_json_idx"",""table"":""moto_spec_values"",""is_unique"":false,""definition"":""CREATE INDEX moto_spec_values_value_json_idx ON public.moto_spec_values USING gin (value_json)"",""is_primary"":false},{""index"":""moto_spec_values_value_number_idx"",""table"":""moto_spec_values"",""is_unique"":false,""definition"":""CREATE INDEX moto_spec_values_value_number_idx ON public.moto_spec_values USING btree (value_number)"",""is_primary"":false},{""index"":""idx_motos_brand_id"",""table"":""motos"",""is_unique"":false,""definition"":""CREATE INDEX idx_motos_brand_id ON public.motos USING btree (brand_id)"",""is_primary"":false},{""index"":""idx_motos_brand_id_year"",""table"":""motos"",""is_unique"":false,""definition"":""CREATE INDEX idx_motos_brand_id_year ON public.motos USING btree (brand_id, year)"",""is_primary"":false},{""index"":""idx_motos_brand_model"",""table"":""motos"",""is_unique"":false,""definition"":""CREATE INDEX idx_motos_brand_model ON public.motos USING btree (brand_id, model_name)"",""is_primary"":false},{""index"":""idx_motos_brand_name_trgm"",""table"":""motos"",""is_unique"":false,""definition"":""CREATE INDEX idx_motos_brand_name_trgm ON public.motos USING gin (brand_name gin_trgm_ops)"",""is_primary"":false},{""index"":""idx_motos_featured_true"",""table"":""motos"",""is_unique"":false,""definition"":""CREATE INDEX idx_motos_featured_true ON public.motos USING btree (year) WHERE (featured = true)"",""is_primary"":false},{""index"":""idx_motos_model_name_trgm"",""table"":""motos"",""is_unique"":false,""definition"":""CREATE INDEX idx_motos_model_name_trgm ON public.motos USING gin (model_name gin_trgm_ops)"",""is_primary"":false},{""index"":""idx_motos_price_tnd"",""table"":""motos"",""is_unique"":false,""definition"":""CREATE INDEX idx_motos_price_tnd ON public.motos USING btree (price_tnd)"",""is_primary"":false},{""index"":""idx_motos_year_price"",""table"":""motos"",""is_unique"":false,""definition"":""CREATE INDEX idx_motos_year_price ON public.motos USING btree (year, price_tnd)"",""is_primary"":false},{""index"":""motos_brand_id_ix"",""table"":""motos"",""is_unique"":false,""definition"":""CREATE INDEX motos_brand_id_ix ON public.motos USING btree (brand_id)"",""is_primary"":false},{""index"":""motos_brand_name_idx"",""table"":""motos"",""is_unique"":false,""definition"":""CREATE INDEX motos_brand_name_idx ON public.motos USING btree (brand_name)"",""is_primary"":false},{""index"":""motos_expr_idx"",""table"":""motos"",""is_unique"":false,""definition"":""CREATE INDEX motos_expr_idx ON public.motos USING gin ((((brand_name || ' '::text) || model_name)) gin_trgm_ops)"",""is_primary"":false},{""index"":""motos_model_name_idx"",""table"":""motos"",""is_unique"":false,""definition"":""CREATE INDEX motos_model_name_idx ON public.motos USING btree (model_name)"",""is_primary"":false},{""index"":""motos_pkey"",""table"":""motos"",""is_unique"":true,""definition"":""CREATE UNIQUE INDEX motos_pkey ON public.motos USING btree (id)"",""is_primary"":true},{""index"":""motos_price_tnd_idx"",""table"":""motos"",""is_unique"":false,""definition"":""CREATE INDEX motos_price_tnd_idx ON public.motos USING btree (price_tnd)"",""is_primary"":false},{""index"":""motos_year_idx"",""table"":""motos"",""is_unique"":false,""definition"":""CREATE INDEX motos_year_idx ON public.motos USING btree (year)"",""is_primary"":false},{""index"":""motos_year_ix"",""table"":""motos"",""is_unique"":false,""definition"":""CREATE INDEX motos_year_ix ON public.motos USING btree (year)"",""is_primary"":false},{""index"":""spec_groups_name_key"",""table"":""spec_groups"",""is_unique"":true,""definition"":""CREATE UNIQUE INDEX spec_groups_name_key ON public.spec_groups USING btree (name)"",""is_primary"":false},{""index"":""spec_groups_pkey"",""table"":""spec_groups"",""is_unique"":true,""definition"":""CREATE UNIQUE INDEX spec_groups_pkey ON public.spec_groups USING btree (id)"",""is_primary"":true},{""index"":""spec_groups_sort_order_idx"",""table"":""spec_groups"",""is_unique"":false,""definition"":""CREATE INDEX spec_groups_sort_order_idx ON public.spec_groups USING btree (sort_order)"",""is_primary"":false},{""index"":""idx_si_key"",""table"":""spec_items"",""is_unique"":false,""definition"":""CREATE INDEX idx_si_key ON public.spec_items USING btree (key)"",""is_primary"":false},{""index"":""spec_items_group_id_key_key"",""table"":""spec_items"",""is_unique"":true,""definition"":""CREATE UNIQUE INDEX spec_items_group_id_key_key ON public.spec_items USING btree (group_id, key)"",""is_primary"":false},{""index"":""spec_items_group_id_sort_order_idx"",""table"":""spec_items"",""is_unique"":false,""definition"":""CREATE INDEX spec_items_group_id_sort_order_idx ON public.spec_items USING btree (group_id, sort_order)"",""is_primary"":false},{""index"":""spec_items_pkey"",""table"":""spec_items"",""is_unique"":true,""definition"":""CREATE UNIQUE INDEX spec_items_pkey ON public.spec_items USING btree (id)"",""is_primary"":true}],""policies"":[{""roles"":[""public""],""table"":""moto_images"",""using"":""true"",""policy"":""moto_images_select_public"",""schema"":""public"",""command"":""SELECT"",""with_check"":null},{""roles"":[""public""],""table"":""moto_spec_values"",""using"":""true"",""policy"":""moto_spec_values_select_public"",""schema"":""public"",""command"":""SELECT"",""with_check"":null},{""roles"":[""public""],""table"":""motos"",""using"":""true"",""policy"":""motos_select_public"",""schema"":""public"",""command"":""SELECT"",""with_check"":null},{""roles"":[""public""],""table"":""spec_groups"",""using"":""true"",""policy"":""spec_groups_select_public"",""schema"":""public"",""command"":""SELECT"",""with_check"":null},{""roles"":[""public""],""table"":""spec_items"",""using"":""true"",""policy"":""spec_items_select_public"",""schema"":""public"",""command"":""SELECT"",""with_check"":null}],""functions"":[{""name"":""fn_get_comparator"",""schema"":""public"",""signature"":""fn_get_comparator(uuid[])"",""definition"":""CREATE OR REPLACE FUNCTION public.fn_get_comparator(p_moto_ids uuid[])\n RETURNS jsonb\n LANGUAGE sql\n STABLE SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\nwith sel_motos_raw as (\r\n  select\r\n    m.id,\r\n    coalesce(to_jsonb(m)->>'brand',\r\n             to_jsonb(m)->>'brand_name',\r\n             to_jsonb(m)->>'marque',\r\n             to_jsonb(m)->>'make')        as brand,\r\n    coalesce(to_jsonb(m)->>'model',\r\n             to_jsonb(m)->>'modele',\r\n             to_jsonb(m)->>'model_name')  as model,\r\n    nullif(to_jsonb(m)->>'year','')::int  as year,\r\n    (\r\n      nullif(\r\n        replace(\r\n          regexp_replace(\r\n            coalesce(to_jsonb(m)->>'price_tnd', to_jsonb(m)->>'price', ''),\r\n            '[^0-9\\.,-]','', 'g'\r\n          ),\r\n          ',', '.'\r\n        ),\r\n        ''\r\n      )\r\n    )::numeric                             as price,\r\n    coalesce(\r\n      to_jsonb(m)->>'display_image',\r\n      to_jsonb(m)->>'image_url',\r\n      to_jsonb(m)->>'cover_image',\r\n      to_jsonb(m)->>'image'\r\n    ) as image\r\n  from public.motos m\r\n  where m.id = any(p_moto_ids)\r\n),\r\nsel_motos as (\r\n  select * from sel_motos_raw\r\n  order by brand nulls last, model nulls last, year desc nulls last\r\n),\r\nmsv_norm as (\r\n  select\r\n    coalesce(to_jsonb(msv)->>'spec_item_id', to_jsonb(msv)->>'item_id', to_jsonb(msv)->>'spec_id') as spec_item_id_txt,\r\n    coalesce(to_jsonb(msv)->>'moto_id', to_jsonb(msv)->>'motoid', to_jsonb(msv)->>'moto')          as moto_id_txt,\r\n    coalesce(\r\n      to_jsonb(msv)->>'value_text',\r\n      to_jsonb(msv)->>'value',\r\n      nullif(trim(to_jsonb(msv)->>'value_number'),''),\r\n      nullif(trim(to_jsonb(msv)->>'number_value'),''),\r\n      case when (to_jsonb(msv)->>'value_boolean')::boolean is not null\r\n           then case when (to_jsonb(msv)->>'value_boolean')::boolean then 'Oui' else 'Non' end end,\r\n      case when to_jsonb(msv)->'value_json' is not null then (to_jsonb(msv)->'value_json')::text end,\r\n      case when to_jsonb(msv)->'json_value'  is not null then (to_jsonb(msv)->'json_value')::text  end\r\n    ) as value_txt\r\n  from public.moto_spec_values msv\r\n),\r\nmsv_filtered as (\r\n  select *\r\n  from msv_norm\r\n  where nullif(moto_id_txt,'')::uuid = any(p_moto_ids)\r\n),\r\nvalues_raw as (\r\n  select\r\n    sg.id            as group_id,\r\n    sg.name          as group_name,\r\n    sg.sort_order    as group_order,\r\n    si.id            as item_id,\r\n    si.key,\r\n    si.label,\r\n    si.unit,\r\n    si.sort_order    as item_order,\r\n    msvf.moto_id_txt as moto_id_txt,\r\n    msvf.value_txt   as value\r\n  from public.spec_items si\r\n  join public.spec_groups sg on sg.id = si.group_id\r\n  join msv_filtered msvf on si.id::text = msvf.spec_item_id_txt\r\n),\r\nitems_grouped as (\r\n  select\r\n    group_id, group_name, group_order,\r\n    item_id, key, label, unit, item_order,\r\n    jsonb_object_agg(moto_id_txt, value order by moto_id_txt) as values_by_moto\r\n  from values_raw\r\n  group by group_id, group_name, group_order, item_id, key, label, unit, item_order\r\n),\r\ngroups_grouped as (\r\n  select\r\n    group_id, group_name, group_order,\r\n    jsonb_agg(\r\n      jsonb_build_object(\r\n        'item_id', item_id, 'key', key, 'label', label, 'unit', unit, 'values', values_by_moto\r\n      )\r\n      order by item_order nulls last, label\r\n    ) as items\r\n  from items_grouped\r\n  group by group_id, group_name, group_order\r\n)\r\nselect jsonb_build_object(\r\n  'motos', coalesce(\r\n    (select jsonb_agg(\r\n      jsonb_build_object('id', id, 'brand', brand, 'model', model, 'year', year, 'price', price, 'image', image)\r\n    ) from sel_motos), '[]'::jsonb\r\n  ),\r\n  'specs', coalesce(\r\n    (select jsonb_agg(\r\n      jsonb_build_object('group', group_name, 'items', items)\r\n      order by group_order nulls last, group_name\r\n    ) from groups_grouped), '[]'::jsonb\r\n  )\r\n);\r\n$function$\n""},{""name"":""fn_get_filter_facets"",""schema"":""public"",""signature"":""fn_get_filter_facets()"",""definition"":""CREATE OR REPLACE FUNCTION public.fn_get_filter_facets()\n RETURNS jsonb\n LANGUAGE sql\n STABLE\nAS $function$\r\nSELECT COALESCE(\r\n  jsonb_agg(\r\n    jsonb_build_object(\r\n      'group', group_name,\r\n      'items',\r\n        (\r\n          SELECT jsonb_agg(\r\n            jsonb_build_object(\r\n              'key',        item_key,\r\n              'label',      item_label,\r\n              'unit',       item_unit,\r\n              'type',       item_type,\r\n              'min',        min_val,\r\n              'max',        max_val,\r\n              'dist_bool',  dist_bool,\r\n              'dist_text',  dist_text\r\n            )\r\n            ORDER BY item_sort NULLS LAST, item_label\r\n          )\r\n          FROM public.vw_spec_facets v2\r\n          WHERE v2.group_name = v.group_name\r\n        )\r\n    )\r\n    ORDER BY group_sort NULLS LAST, group_name\r\n  ),\r\n  '[]'::jsonb\r\n)\r\nFROM (\r\n  SELECT DISTINCT group_name, group_sort\r\n  FROM public.vw_spec_facets\r\n  ORDER BY group_sort NULLS LAST, group_name\r\n) v;\r\n$function$\n""},{""name"":""fn_get_moto_full"",""schema"":""public"",""signature"":""fn_get_moto_full(text)"",""definition"":""CREATE OR REPLACE FUNCTION public.fn_get_moto_full(p_moto_id_text text)\n RETURNS jsonb\n LANGUAGE sql\n SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\n  SELECT public.fn_get_moto_full((p_moto_id_text)::uuid);\r\n$function$\n""},{""name"":""fn_get_moto_full"",""schema"":""public"",""signature"":""fn_get_moto_full(uuid)"",""definition"":""CREATE OR REPLACE FUNCTION public.fn_get_moto_full(p_moto_id uuid)\n RETURNS jsonb\n LANGUAGE sql\n STABLE SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\nwith moto as (\r\n  select\r\n    m.id,\r\n    coalesce(m.brand_name, to_jsonb(m)->>'brand', to_jsonb(m)->>'brand_name') as brand_name,\r\n    coalesce(m.model_name, to_jsonb(m)->>'model', to_jsonb(m)->>'model_name') as model_name,\r\n    coalesce(m.year, nullif((to_jsonb(m)->>'year')::int, null)) as year,\r\n    coalesce(m.price_tnd, (to_jsonb(m)->>'price_tnd')::numeric, (to_jsonb(m)->>'price')::numeric) as price_tnd\r\n  from public.motos m\r\n  where m.id = p_moto_id\r\n  limit 1\r\n),\r\nimages as (\r\n  select\r\n    p_moto_id as moto_id,\r\n    coalesce(\r\n      jsonb_agg(\r\n        jsonb_build_object(\r\n          'alt', coalesce(to_jsonb(mi)->>'alt', to_jsonb(mi)->>'description', to_jsonb(mi)->>'label', ''),\r\n          'url', coalesce(\r\n            to_jsonb(mi)->>'url',\r\n            to_jsonb(mi)->>'path',\r\n            to_jsonb(mi)->>'src',\r\n            to_jsonb(mi)->>'storage_path'\r\n          )\r\n        )\r\n        order by\r\n          case when (to_jsonb(mi)->>'sort_order') ~ '^\\d+$' then (to_jsonb(mi)->>'sort_order')::int else 9999 end,\r\n          to_jsonb(mi)->>'created_at', to_jsonb(mi)->>'url', to_jsonb(mi)->>'path', to_jsonb(mi)->>'src', to_jsonb(mi)->>'storage_path'\r\n      ),\r\n      '[]'::jsonb\r\n    ) as images\r\n  from public.moto_images mi\r\n  where mi.moto_id = p_moto_id\r\n),\r\nspec_groups as (\r\n  select\r\n    p_moto_id as moto_id,\r\n    coalesce(\r\n      jsonb_agg(\r\n        jsonb_build_object(\r\n          'group', coalesce(to_jsonb(g)->>'name', to_jsonb(g)->>'label', to_jsonb(g)->>'title', to_jsonb(g)->>'key', to_jsonb(g)->>'slug', 'Spécifications'),\r\n          'items', (\r\n            select coalesce(\r\n              jsonb_agg(\r\n                jsonb_build_object(\r\n                  'key',   coalesce(to_jsonb(si)->>'key', to_jsonb(si)->>'code', to_jsonb(si)->>'name'),\r\n                  'label', coalesce(to_jsonb(si)->>'label', to_jsonb(si)->>'name', to_jsonb(si)->>'title', to_jsonb(si)->>'key'),\r\n                  'unit',  to_jsonb(si)->>'unit',\r\n                  'value', coalesce(\r\n                    to_jsonb(msv)->>'value_text',\r\n                    to_jsonb(msv)->>'value_number',\r\n                    to_jsonb(msv)->>'value_boolean',\r\n                    to_jsonb(msv)->>'value_json',\r\n                    '-'\r\n                  )\r\n                )\r\n                order by\r\n                  case when (to_jsonb(si)->>'sort_order') ~ '^\\d+$' then (to_jsonb(si)->>'sort_order')::int else 9999 end,\r\n                  coalesce(to_jsonb(si)->>'label', to_jsonb(si)->>'name', to_jsonb(si)->>'title', to_jsonb(si)->>'key')\r\n              ),\r\n              '[]'::jsonb\r\n            )\r\n            from public.spec_items si\r\n            left join public.moto_spec_values msv\r\n              on msv.spec_item_id = si.id\r\n             and msv.moto_id = p_moto_id\r\n            where si.group_id = g.id\r\n          )\r\n        )\r\n        order by\r\n          case when (to_jsonb(g)->>'sort_order') ~ '^\\d+$' then (to_jsonb(g)->>'sort_order')::int else 9999 end,\r\n          coalesce(to_jsonb(g)->>'name', to_jsonb(g)->>'label', to_jsonb(g)->>'title', to_jsonb(g)->>'key', to_jsonb(g)->>'slug')\r\n      ),\r\n      '[]'::jsonb\r\n    ) as specs\r\n  from public.spec_groups g\r\n)\r\nselect jsonb_build_object(\r\n  'id', m.id,\r\n  'year', m.year,\r\n  'brand', m.brand_name,\r\n  'model', m.model_name,\r\n  'specs', s.specs,\r\n  'images', i.images,\r\n  'price_tnd', m.price_tnd\r\n)\r\nfrom moto m\r\nleft join images i on i.moto_id = m.id\r\nleft join spec_groups s on s.moto_id = m.id;\r\n$function$\n""},{""name"":""fn_get_moto_specs"",""schema"":""public"",""signature"":""fn_get_moto_specs(uuid)"",""definition"":""CREATE OR REPLACE FUNCTION public.fn_get_moto_specs(p_moto_id uuid)\n RETURNS jsonb\n LANGUAGE sql\n STABLE\nAS $function$\r\n  WITH flat AS (\r\n    SELECT\r\n      sg.name AS group_name,\r\n      si.key, si.label,\r\n      CASE\r\n        WHEN v.value_number  IS NOT NULL THEN 'number'\r\n        WHEN v.value_boolean IS NOT NULL THEN 'boolean'\r\n        ELSE 'text'\r\n      END AS value_type,\r\n      v.value_text,\r\n      v.value_number,\r\n      v.value_boolean,\r\n      COALESCE(\r\n        v.value_text,\r\n        CASE WHEN v.value_number  IS NOT NULL THEN (v.value_number::text) END,\r\n        CASE WHEN v.value_boolean IS NOT NULL THEN (CASE WHEN v.value_boolean THEN 'Oui' ELSE 'Non' END) END\r\n      ) AS value_resolved\r\n    FROM public.moto_spec_values v\r\n    JOIN public.spec_items si ON si.id = v.item_id\r\n    JOIN public.spec_groups sg ON sg.id = si.group_id\r\n    WHERE v.moto_id = p_moto_id\r\n  )\r\n  SELECT COALESCE(\r\n    jsonb_agg(\r\n      jsonb_build_object(\r\n        'group', g.group_name,\r\n        'items', (\r\n          SELECT jsonb_agg(\r\n            jsonb_build_object(\r\n              'key', f.key,\r\n              'label', f.label,\r\n              'type', f.value_type,\r\n              'value', f.value_resolved,\r\n              'raw_text', f.value_text,\r\n              'raw_number', f.value_number,\r\n              'raw_boolean', f.value_boolean\r\n            )\r\n            ORDER BY f.label\r\n          )\r\n          FROM flat f WHERE f.group_name = g.group_name\r\n        )\r\n      )\r\n      ORDER BY g.group_name\r\n    ),\r\n    '[]'::jsonb\r\n  )\r\n  FROM (SELECT DISTINCT group_name FROM flat) AS g;\r\n$function$\n""},{""name"":""fn_motos_by_brand_auto"",""schema"":""public"",""signature"":""fn_motos_by_brand_auto(text)"",""definition"":""CREATE OR REPLACE FUNCTION public.fn_motos_by_brand_auto(p_brand text)\n RETURNS TABLE(id uuid, brand text, model text, year integer, price numeric, image text)\n LANGUAGE plpgsql\n STABLE SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\ndeclare\r\n  id_col    text;\r\n  brand_col text;\r\n  model_col text;\r\n  year_col  text;\r\n  price_col text;\r\n  img_col   text;\r\n  sql       text;\r\nbegin\r\n  -- id (on préfère uuid)\r\n  select column_name into id_col\r\n  from information_schema.columns\r\n  where table_schema='public' and table_name='motos'\r\n    and udt_name = 'uuid'\r\n    and column_name ilike '%id%'\r\n  order by case when column_name = 'id' then 0 else 1 end\r\n  limit 1;\r\n\r\n  if id_col is null then\r\n    -- fallback: n'importe quelle colonne qui ressemble à id\r\n    select column_name into id_col\r\n    from information_schema.columns\r\n    where table_schema='public' and table_name='motos'\r\n      and column_name ilike '%id%'\r\n    order by case when column_name = 'id' then 0 else 1 end\r\n    limit 1;\r\n  end if;\r\n\r\n  -- brand\r\n  select column_name into brand_col\r\n  from information_schema.columns\r\n  where table_schema='public' and table_name='motos'\r\n    and data_type in ('text','character varying','citext')\r\n    and (column_name ilike '%brand%' or column_name ilike '%marque%' or column_name ilike '%make%' or column_name ilike '%manufacturer%')\r\n  order by case\r\n            when column_name ilike '%brand%' then 1\r\n            when column_name ilike '%marque%' then 2\r\n            when column_name ilike '%make%' then 3\r\n            else 4\r\n          end\r\n  limit 1;\r\n\r\n  -- model\r\n  select column_name into model_col\r\n  from information_schema.columns\r\n  where table_schema='public' and table_name='motos'\r\n    and data_type in ('text','character varying','citext')\r\n    and (column_name ilike '%model%' or column_name ilike '%modele%' or column_name ilike '%variant%' or column_name ilike '%version%')\r\n  order by case\r\n            when column_name ilike '%model%' then 1\r\n            when column_name ilike '%modele%' then 2\r\n            else 3\r\n          end\r\n  limit 1;\r\n\r\n  -- year\r\n  select column_name into year_col\r\n  from information_schema.columns\r\n  where table_schema='public' and table_name='motos'\r\n    and (data_type like '%integer%' or data_type like '%numeric%' or data_type like '%double%' or udt_name='int4' or udt_name='int2' or udt_name='int8')\r\n    and (column_name ilike '%year%' or column_name ilike '%annee%' or column_name ilike 'an%')\r\n  order by case when column_name ilike '%year%' then 1 else 2 end\r\n  limit 1;\r\n\r\n  -- price\r\n  select column_name into price_col\r\n  from information_schema.columns\r\n  where table_schema='public' and table_name='motos'\r\n    and (data_type like '%numeric%' or data_type like '%double%' or data_type like '%integer%' or data_type in ('text','character varying','citext'))\r\n    and (column_name ilike '%price%' or column_name ilike '%prix%')\r\n  order by case when column_name ilike '%price_tnd%' then 0 when column_name ilike '%price%' then 1 else 2 end\r\n  limit 1;\r\n\r\n  -- image\r\n  select column_name into img_col\r\n  from information_schema.columns\r\n  where table_schema='public' and table_name='motos'\r\n    and data_type in ('text','character varying','citext')\r\n    and (\r\n      column_name ilike '%display_image%' or\r\n      column_name ilike '%image_url%' or\r\n      column_name ilike '%cover_image%' or\r\n      column_name ilike '%image%' or\r\n      column_name ilike '%photo%' or\r\n      column_name ilike '%thumbnail%'\r\n    )\r\n  order by case\r\n            when column_name ilike '%display_image%' then 1\r\n            when column_name ilike '%image_url%' then 2\r\n            when column_name ilike '%cover_image%' then 3\r\n            when column_name ilike '%image%' then 4\r\n            else 5\r\n          end\r\n  limit 1;\r\n\r\n  if id_col is null or brand_col is null then\r\n    raise exception 'Impossible de détecter id/brand dans public.motos (id_col=%, brand_col=%)', id_col, brand_col;\r\n  end if;\r\n\r\n  sql := 'select ' ||\r\n         format('%I', id_col) || '::uuid as id, ' ||\r\n         format('%I', brand_col) || '::text as brand, ' ||\r\n         case when model_col is not null then format('%I', model_col) || '::text' else 'null::text' end || ' as model, ' ||\r\n         case when year_col  is not null then format('%I', year_col)  || '::int'  else 'null::int'  end || ' as year, ' ||\r\n         case when price_col is not null then\r\n           'nullif(replace(regexp_replace('||format('%I', price_col)||'::text, ''[^0-9\\.,-]'','''',''g''), '',''.''), '''')::numeric'\r\n         else 'null::numeric' end || ' as price, ' ||\r\n         case when img_col   is not null then format('%I', img_col)   || '::text' else 'null::text' end || ' as image ' ||\r\n         'from public.motos ' ||\r\n         'where '||format('%I', brand_col)||'::text = $1 '||\r\n         'order by ' ||\r\n           coalesce(model_col, brand_col) || ' asc nulls last, ' ||\r\n           coalesce(year_col, brand_col)  || ' desc nulls last';\r\n\r\n  return query execute sql using p_brand;\r\nend;\r\n$function$\n""},{""name"":""fn_motos_by_brand_v2"",""schema"":""public"",""signature"":""fn_motos_by_brand_v2(text)"",""definition"":""CREATE OR REPLACE FUNCTION public.fn_motos_by_brand_v2(p_brand text)\n RETURNS TABLE(id uuid, brand text, model text, year integer, price numeric, image text)\n LANGUAGE sql\n STABLE SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\n  select\r\n    m.id,\r\n    -- normalise \""brand\""\r\n    coalesce(m.brand_name::text,\r\n             to_jsonb(m)->>'brand',\r\n             to_jsonb(m)->>'marque',\r\n             to_jsonb(m)->>'make')    as brand,\r\n    -- normalise \""model\""\r\n    coalesce(m.model_name::text,\r\n             to_jsonb(m)->>'model',\r\n             to_jsonb(m)->>'modele',\r\n             to_jsonb(m)->>'model_name') as model,\r\n    m.year::int as year,\r\n    -- convertit price_tnd texte -> numeric si possible\r\n    nullif(\r\n      replace(\r\n        regexp_replace(coalesce(m.price_tnd::text, to_jsonb(m)->>'price', ''), '[^0-9\\.,-]', '', 'g'),\r\n        ',','.'\r\n      ),\r\n      ''\r\n    )::numeric as price,\r\n    -- pas d'image dans ton schema fourni -> tente fallback, sinon NULL\r\n    coalesce(\r\n      to_jsonb(m)->>'display_image',\r\n      to_jsonb(m)->>'image_url',\r\n      to_jsonb(m)->>'cover_image',\r\n      to_jsonb(m)->>'image'\r\n    ) as image\r\n  from public.motos m\r\n  where coalesce(m.brand_name::text,\r\n                 to_jsonb(m)->>'brand',\r\n                 to_jsonb(m)->>'marque',\r\n                 to_jsonb(m)->>'make') = p_brand\r\n  order by model asc nulls last, year desc nulls last;\r\n$function$\n""},{""name"":""fn_motos_by_brand"",""schema"":""public"",""signature"":""fn_motos_by_brand(text)"",""definition"":""CREATE OR REPLACE FUNCTION public.fn_motos_by_brand(p_brand text)\n RETURNS TABLE(id uuid, brand text, model text, year integer, price numeric, image text)\n LANGUAGE sql\n STABLE SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\n  with src as (\r\n    select\r\n      m.id,\r\n      coalesce(to_jsonb(m)->>'brand', to_jsonb(m)->>'marque', to_jsonb(m)->>'make') as brand,\r\n      coalesce(to_jsonb(m)->>'model', to_jsonb(m)->>'modele', to_jsonb(m)->>'model_name') as model,\r\n      nullif(to_jsonb(m)->>'year','')::int as year,\r\n      (\r\n        nullif(\r\n          replace(\r\n            regexp_replace(\r\n              coalesce(to_jsonb(m)->>'price_tnd', to_jsonb(m)->>'price', ''),\r\n              '[^0-9\\.,-]','', 'g'\r\n            ),\r\n            ',',\r\n            '.'\r\n          ),\r\n          ''\r\n        )\r\n      )::numeric as price,\r\n      coalesce(\r\n        to_jsonb(m)->>'display_image',\r\n        to_jsonb(m)->>'image_url',\r\n        to_jsonb(m)->>'cover_image',\r\n        to_jsonb(m)->>'image'\r\n      ) as image\r\n    from public.motos m\r\n  )\r\n  select s.id, s.brand, s.model, s.year, s.price, s.image\r\n  from src s\r\n  where s.brand = p_brand\r\n  order by s.model nulls last, s.year desc nulls last;\r\n$function$\n""},{""name"":""fn_public_brands_auto"",""schema"":""public"",""signature"":""fn_public_brands_auto()"",""definition"":""CREATE OR REPLACE FUNCTION public.fn_public_brands_auto()\n RETURNS SETOF text\n LANGUAGE plpgsql\n STABLE SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\ndeclare\r\n  brand_col text;\r\n  sql text;\r\nbegin\r\n  -- trouver une colonne texte qui ressemble à brand/marque/make/manufacturer\r\n  select column_name into brand_col\r\n  from information_schema.columns\r\n  where table_schema = 'public' and table_name = 'motos'\r\n    and data_type in ('text','character varying','citext')\r\n    and (\r\n      column_name ilike '%brand%' or\r\n      column_name ilike '%marque%' or\r\n      column_name ilike '%make%' or\r\n      column_name ilike '%manufacturer%'\r\n    )\r\n  order by case\r\n            when column_name ilike '%brand%' then 1\r\n            when column_name ilike '%marque%' then 2\r\n            when column_name ilike '%make%' then 3\r\n            else 4\r\n          end\r\n  limit 1;\r\n\r\n  if brand_col is null then\r\n    raise notice 'Aucune colonne de marque trouvée dans public.motos';\r\n    return;\r\n  end if;\r\n\r\n  sql := format($f$\r\n    select distinct %1$I::text as brand\r\n    from public.motos\r\n    where %1$I is not null and nullif(trim(%1$I::text),'') is not null\r\n    order by %1$I asc\r\n  $f$, brand_col);\r\n\r\n  return query execute sql;\r\nend;\r\n$function$\n""},{""name"":""fn_public_brands_v2"",""schema"":""public"",""signature"":""fn_public_brands_v2()"",""definition"":""CREATE OR REPLACE FUNCTION public.fn_public_brands_v2()\n RETURNS SETOF text\n LANGUAGE sql\n STABLE SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\n  select distinct\r\n         coalesce(m.brand_name::text,\r\n                  to_jsonb(m)->>'brand',\r\n                  to_jsonb(m)->>'marque',\r\n                  to_jsonb(m)->>'make')\r\n  from public.motos m\r\n  where coalesce(m.brand_name::text,\r\n                 to_jsonb(m)->>'brand',\r\n                 to_jsonb(m)->>'marque',\r\n                 to_jsonb(m)->>'make') is not null\r\n  order by 1 asc;\r\n$function$\n""},{""name"":""fn_search_motos"",""schema"":""public"",""signature"":""fn_search_motos(uuid[],text[],integer[],numeric,numeric,text,boolean,text,integer,integer)"",""definition"":""CREATE OR REPLACE FUNCTION public.fn_search_motos(p_brand_ids uuid[] DEFAULT NULL::uuid[], p_brand_names text[] DEFAULT NULL::text[], p_years integer[] DEFAULT NULL::integer[], p_price_min numeric DEFAULT NULL::numeric, p_price_max numeric DEFAULT NULL::numeric, p_search text DEFAULT NULL::text, p_only_featured boolean DEFAULT NULL::boolean, p_sort text DEFAULT 'price_asc'::text, p_limit integer DEFAULT 20, p_offset integer DEFAULT 0)\n RETURNS TABLE(id uuid, brand_id uuid, brand_name text, model_name text, year integer, price_tnd numeric, featured boolean, total_count bigint)\n LANGUAGE plpgsql\n STABLE\nAS $function$\r\nBEGIN\r\n  RETURN QUERY\r\n  WITH base AS (\r\n    SELECT m.*\r\n    FROM public.motos AS m\r\n    WHERE (p_brand_ids   IS NULL OR m.brand_id   = ANY (p_brand_ids))\r\n      AND (p_brand_names IS NULL OR EXISTS (\r\n            SELECT 1\r\n            FROM unnest(p_brand_names) AS bn\r\n            WHERE m.brand_name ILIKE '%' || trim(bn) || '%'\r\n          ))\r\n      AND (p_years     IS NULL OR m.year      = ANY (p_years))\r\n      AND (p_price_min IS NULL OR m.price_tnd >= p_price_min)\r\n      AND (p_price_max IS NULL OR m.price_tnd <= p_price_max)\r\n      AND (p_only_featured IS NULL OR m.featured = p_only_featured)\r\n      AND (\r\n            p_search IS NULL\r\n         OR m.model_name ILIKE '%' || p_search || '%'\r\n         OR m.brand_name ILIKE '%' || p_search || '%'\r\n          )\r\n  )\r\n  SELECT\r\n    b.id,\r\n    b.brand_id,\r\n    b.brand_name,\r\n    b.model_name,\r\n    b.year,\r\n    b.price_tnd::numeric,\r\n    b.featured,\r\n    COUNT(*) OVER() AS total_count\r\n  FROM base b\r\n  ORDER BY\r\n    CASE WHEN p_sort = 'price_asc'  THEN b.price_tnd END ASC,\r\n    CASE WHEN p_sort = 'price_desc' THEN b.price_tnd END DESC,\r\n    CASE WHEN p_sort = 'year_desc'  THEN b.year END    DESC,\r\n    CASE WHEN p_sort = 'year_asc'   THEN b.year END    ASC,\r\n    CASE WHEN p_sort = 'brand_asc'  THEN b.brand_name END ASC,\r\n    CASE WHEN p_sort = 'brand_desc' THEN b.brand_name END DESC,\r\n    b.brand_name ASC, b.model_name ASC\r\n  LIMIT GREATEST(1, p_limit)\r\n  OFFSET GREATEST(0, p_offset);\r\nEND;\r\n$function$\n""},{""name"":""get_spec_numeric_ranges_filtered"",""schema"":""public"",""signature"":""get_spec_numeric_ranges_filtered(jsonb)"",""definition"":""CREATE OR REPLACE FUNCTION public.get_spec_numeric_ranges_filtered(f jsonb)\n RETURNS TABLE(spec_item_id uuid, min_value numeric, max_value numeric)\n LANGUAGE plpgsql\nAS $function$\r\ndeclare\r\n  where_sql text := ' WHERE 1=1';\r\n  sql text;\r\n  v_brand uuid;\r\n  v_year_min int;\r\n  v_year_max int;\r\n  v_price_min numeric;\r\n  v_price_max numeric;\r\n  spec jsonb;\r\n  k text;\r\n  v jsonb;\r\n  cond text;\r\n  vmin numeric;\r\n  vmax numeric;\r\n  vbool boolean;\r\nbegin\r\n  -- mêmes filtres que search_motos\r\n  if coalesce(f->'filters','{}'::jsonb) ? 'brand_id' then\r\n    v_brand := (f->'filters'->>'brand_id')::uuid;\r\n    if v_brand is not null then where_sql := where_sql || format(' AND m.brand_id = %L::uuid', v_brand); end if;\r\n  end if;\r\n  if coalesce(f->'filters','{}'::jsonb) ? 'year_min' then\r\n    v_year_min := nullif(f->'filters'->>'year_min','')::int;\r\n    if v_year_min is not null then where_sql := where_sql || format(' AND m.year >= %s', v_year_min); end if;\r\n  end if;\r\n  if coalesce(f->'filters','{}'::jsonb) ? 'year_max' then\r\n    v_year_max := nullif(f->'filters'->>'year_max','')::int;\r\n    if v_year_max is not null then where_sql := where_sql || format(' AND m.year <= %s', v_year_max); end if;\r\n  end if;\r\n  if coalesce(f->'filters','{}'::jsonb) ? 'price_min' then\r\n    v_price_min := nullif(f->'filters'->>'price_min','')::numeric;\r\n    if v_price_min is not null then where_sql := where_sql || format(' AND m.price_tnd >= %s', v_price_min); end if;\r\n  end if;\r\n  if coalesce(f->'filters','{}'::jsonb) ? 'price_max' then\r\n    v_price_max := nullif(f->'filters'->>'price_max','')::numeric;\r\n    if v_price_max is not null then where_sql := where_sql || format(' AND m.price_tnd <= %s', v_price_max); end if;\r\n  end if;\r\n\r\n  if coalesce(f->'filters','{}'::jsonb) ? 'specs' then\r\n    spec := f->'filters'->'specs';\r\n    for k, v in select * from jsonb_each(spec) loop\r\n      cond := ' TRUE';\r\n      if (v->>'type') = 'number' then\r\n        vmin := nullif(v->>'min','')::numeric;\r\n        vmax := nullif(v->>'max','')::numeric;\r\n        if vmin is not null then cond := cond || format(' AND sv.value_number >= %s', vmin); end if;\r\n        if vmax is not null then cond := cond || format(' AND sv.value_number <= %s', vmax); end if;\r\n        where_sql := where_sql || format(' AND EXISTS (SELECT 1 FROM public.moto_spec_values sv WHERE sv.moto_id = m.id AND sv.spec_item_id = %L::uuid AND %s)', k, cond);\r\n      elsif (v->>'type') = 'boolean' then\r\n        vbool := (v->>'value')::boolean;\r\n        where_sql := where_sql || format(' AND EXISTS (SELECT 1 FROM public.moto_spec_values sv WHERE sv.moto_id = m.id AND sv.spec_item_id = %L::uuid AND sv.value_boolean IS NOT DISTINCT FROM %L)', k, vbool);\r\n      elsif (v->>'type') = 'text' then\r\n        where_sql := where_sql || format(' AND EXISTS (SELECT 1 FROM public.moto_spec_values sv WHERE sv.moto_id = m.id AND sv.spec_item_id = %L::uuid AND sv.value_text = ANY (%L::text[]))', k, array(select jsonb_array_elements_text(v->'values')));\r\n      end if;\r\n    end loop;\r\n  end if;\r\n\r\n  sql := '\r\n    with base as (\r\n      select m.id\r\n      from public.motos m ' || where_sql || '\r\n    )\r\n    select si.id as spec_item_id,\r\n           min(msv.value_number) as min_value,\r\n           max(msv.value_number) as max_value\r\n    from base b\r\n    join public.moto_spec_values msv on msv.moto_id = b.id\r\n    join public.spec_items si on si.id = msv.spec_item_id\r\n    where si.data_type = ''number'' and msv.value_number is not null\r\n    group by si.id\r\n  ';\r\n  return query execute sql;\r\nend;\r\n$function$\n""},{""name"":""get_spec_numeric_ranges"",""schema"":""public"",""signature"":""get_spec_numeric_ranges()"",""definition"":""CREATE OR REPLACE FUNCTION public.get_spec_numeric_ranges()\n RETURNS TABLE(spec_item_id uuid, min_value numeric, max_value numeric)\n LANGUAGE sql\nAS $function$\r\n  select si.id as spec_item_id,\r\n         min(msv.value_number) as min_value,\r\n         max(msv.value_number) as max_value\r\n  from public.spec_items si\r\n  join public.moto_spec_values msv on msv.spec_item_id = si.id\r\n  where si.data_type = 'number' and msv.value_number is not null\r\n  group by si.id;\r\n$function$\n""},{""name"":""get_spec_text_options_filtered"",""schema"":""public"",""signature"":""get_spec_text_options_filtered(jsonb,integer)"",""definition"":""CREATE OR REPLACE FUNCTION public.get_spec_text_options_filtered(f jsonb, limit_per_item integer DEFAULT 50)\n RETURNS TABLE(spec_item_id uuid, value_text text, n bigint)\n LANGUAGE plpgsql\nAS $function$\r\ndeclare\r\n  where_sql text := ' WHERE 1=1';\r\n  sql text;\r\n  v_brand uuid;\r\n  v_year_min int;\r\n  v_year_max int;\r\n  v_price_min numeric;\r\n  v_price_max numeric;\r\n  spec jsonb;\r\n  k text;\r\n  v jsonb;\r\n  cond text;\r\n  vmin numeric;\r\n  vmax numeric;\r\n  vbool boolean;\r\nbegin\r\n  -- même logique de filtres que search_motos\r\n  if coalesce(f->'filters','{}'::jsonb) ? 'brand_id' then\r\n    v_brand := (f->'filters'->>'brand_id')::uuid;\r\n    if v_brand is not null then where_sql := where_sql || format(' AND m.brand_id = %L::uuid', v_brand); end if;\r\n  end if;\r\n  if coalesce(f->'filters','{}'::jsonb) ? 'year_min' then\r\n    v_year_min := nullif(f->'filters'->>'year_min','')::int;\r\n    if v_year_min is not null then where_sql := where_sql || format(' AND m.year >= %s', v_year_min); end if;\r\n  end if;\r\n  if coalesce(f->'filters','{}'::jsonb) ? 'year_max' then\r\n    v_year_max := nullif(f->'filters'->>'year_max','')::int;\r\n    if v_year_max is not null then where_sql := where_sql || format(' AND m.year <= %s', v_year_max); end if;\r\n  end if;\r\n  if coalesce(f->'filters','{}'::jsonb) ? 'price_min' then\r\n    v_price_min := nullif(f->'filters'->>'price_min','')::numeric;\r\n    if v_price_min is not null then where_sql := where_sql || format(' AND m.price_tnd >= %s', v_price_min); end if;\r\n  end if;\r\n  if coalesce(f->'filters','{}'::jsonb) ? 'price_max' then\r\n    v_price_max := nullif(f->'filters'->>'price_max','')::numeric;\r\n    if v_price_max is not null then where_sql := where_sql || format(' AND m.price_tnd <= %s', v_price_max); end if;\r\n  end if;\r\n\r\n  if coalesce(f->'filters','{}'::jsonb) ? 'specs' then\r\n    spec := f->'filters'->'specs';\r\n    for k, v in select * from jsonb_each(spec) loop\r\n      cond := ' TRUE';\r\n      if (v->>'type') = 'number' then\r\n        vmin := nullif(v->>'min','')::numeric;\r\n        vmax := nullif(v->>'max','')::numeric;\r\n        if vmin is not null then cond := cond || format(' AND sv.value_number >= %s', vmin); end if;\r\n        if vmax is not null then cond := cond || format(' AND sv.value_number <= %s', vmax); end if;\r\n        where_sql := where_sql || format(' AND EXISTS (SELECT 1 FROM public.moto_spec_values sv WHERE sv.moto_id = m.id AND sv.spec_item_id = %L::uuid AND %s)', k, cond);\r\n      elsif (v->>'type') = 'boolean' then\r\n        vbool := (v->>'value')::boolean;\r\n        where_sql := where_sql || format(' AND EXISTS (SELECT 1 FROM public.moto_spec_values sv WHERE sv.moto_id = m.id AND sv.spec_item_id = %L::uuid AND sv.value_boolean IS NOT DISTINCT FROM %L)', k, vbool);\r\n      elsif (v->>'type') = 'text' then\r\n        -- si déjà filtré par ce même item : on garde l'intersection\r\n        where_sql := where_sql || format(' AND EXISTS (SELECT 1 FROM public.moto_spec_values sv WHERE sv.moto_id = m.id AND sv.spec_item_id = %L::uuid AND sv.value_text = ANY (%L::text[]))', k, array(select jsonb_array_elements_text(v->'values')));\r\n      end if;\r\n    end loop;\r\n  end if;\r\n\r\n  sql := '\r\n    with base as (\r\n      select m.id\r\n      from public.motos m ' || where_sql || '\r\n    )\r\n    , ranked as (\r\n      select si.id as spec_item_id, msv.value_text, count(*) as n,\r\n             row_number() over (partition by si.id order by count(*) desc, msv.value_text asc) as rn\r\n      from base b\r\n      join public.moto_spec_values msv on msv.moto_id = b.id\r\n      join public.spec_items si on si.id = msv.spec_item_id\r\n      where si.data_type in (''text'',''enum'') and msv.value_text is not null and msv.value_text <> ''''\r\n      group by si.id, msv.value_text\r\n    )\r\n    select spec_item_id, value_text, n from ranked\r\n    where rn <= coalesce(' || coalesce((f->>'limit_per_item'), '50') || ', 50);';\r\n\r\n  return query execute sql;\r\nend;\r\n$function$\n""},{""name"":""get_spec_text_options"",""schema"":""public"",""signature"":""get_spec_text_options(integer)"",""definition"":""CREATE OR REPLACE FUNCTION public.get_spec_text_options(limit_per_item integer DEFAULT 50)\n RETURNS TABLE(spec_item_id uuid, value_text text, n bigint)\n LANGUAGE sql\nAS $function$\r\n  with ranked as (\r\n    select si.id as spec_item_id,\r\n           msv.value_text,\r\n           count(*) as n,\r\n           row_number() over (partition by si.id order by count(*) desc, msv.value_text asc) as rn\r\n    from public.spec_items si\r\n    join public.moto_spec_values msv on msv.spec_item_id = si.id\r\n    where si.data_type in ('text','enum') and msv.value_text is not null and msv.value_text <> ''\r\n    group by si.id, msv.value_text\r\n  )\r\n  select spec_item_id, value_text, n\r\n  from ranked\r\n  where rn <= coalesce(limit_per_item, 50);\r\n$function$\n""},{""name"":""gin_extract_query_trgm"",""schema"":""public"",""signature"":""gin_extract_query_trgm(text,internal,smallint,internal,internal,internal,internal)"",""definition"":""CREATE OR REPLACE FUNCTION public.gin_extract_query_trgm(text, internal, smallint, internal, internal, internal, internal)\n RETURNS internal\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$gin_extract_query_trgm$function$\n""},{""name"":""gin_extract_value_trgm"",""schema"":""public"",""signature"":""gin_extract_value_trgm(text,internal)"",""definition"":""CREATE OR REPLACE FUNCTION public.gin_extract_value_trgm(text, internal)\n RETURNS internal\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$gin_extract_value_trgm$function$\n""},{""name"":""gin_trgm_consistent"",""schema"":""public"",""signature"":""gin_trgm_consistent(internal,smallint,text,integer,internal,internal,internal,internal)"",""definition"":""CREATE OR REPLACE FUNCTION public.gin_trgm_consistent(internal, smallint, text, integer, internal, internal, internal, internal)\n RETURNS boolean\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$gin_trgm_consistent$function$\n""},{""name"":""gin_trgm_triconsistent"",""schema"":""public"",""signature"":""gin_trgm_triconsistent(internal,smallint,text,integer,internal,internal,internal)"",""definition"":""CREATE OR REPLACE FUNCTION public.gin_trgm_triconsistent(internal, smallint, text, integer, internal, internal, internal)\n RETURNS \""char\""\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$gin_trgm_triconsistent$function$\n""},{""name"":""gtrgm_compress"",""schema"":""public"",""signature"":""gtrgm_compress(internal)"",""definition"":""CREATE OR REPLACE FUNCTION public.gtrgm_compress(internal)\n RETURNS internal\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$gtrgm_compress$function$\n""},{""name"":""gtrgm_consistent"",""schema"":""public"",""signature"":""gtrgm_consistent(internal,text,smallint,oid,internal)"",""definition"":""CREATE OR REPLACE FUNCTION public.gtrgm_consistent(internal, text, smallint, oid, internal)\n RETURNS boolean\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$gtrgm_consistent$function$\n""},{""name"":""gtrgm_decompress"",""schema"":""public"",""signature"":""gtrgm_decompress(internal)"",""definition"":""CREATE OR REPLACE FUNCTION public.gtrgm_decompress(internal)\n RETURNS internal\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$gtrgm_decompress$function$\n""},{""name"":""gtrgm_distance"",""schema"":""public"",""signature"":""gtrgm_distance(internal,text,smallint,oid,internal)"",""definition"":""CREATE OR REPLACE FUNCTION public.gtrgm_distance(internal, text, smallint, oid, internal)\n RETURNS double precision\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$gtrgm_distance$function$\n""},{""name"":""gtrgm_in"",""schema"":""public"",""signature"":""gtrgm_in(cstring)"",""definition"":""CREATE OR REPLACE FUNCTION public.gtrgm_in(cstring)\n RETURNS gtrgm\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$gtrgm_in$function$\n""},{""name"":""gtrgm_options"",""schema"":""public"",""signature"":""gtrgm_options(internal)"",""definition"":""CREATE OR REPLACE FUNCTION public.gtrgm_options(internal)\n RETURNS void\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE\nAS '$libdir/pg_trgm', $function$gtrgm_options$function$\n""},{""name"":""gtrgm_out"",""schema"":""public"",""signature"":""gtrgm_out(gtrgm)"",""definition"":""CREATE OR REPLACE FUNCTION public.gtrgm_out(gtrgm)\n RETURNS cstring\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$gtrgm_out$function$\n""},{""name"":""gtrgm_penalty"",""schema"":""public"",""signature"":""gtrgm_penalty(internal,internal,internal)"",""definition"":""CREATE OR REPLACE FUNCTION public.gtrgm_penalty(internal, internal, internal)\n RETURNS internal\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$gtrgm_penalty$function$\n""},{""name"":""gtrgm_picksplit"",""schema"":""public"",""signature"":""gtrgm_picksplit(internal,internal)"",""definition"":""CREATE OR REPLACE FUNCTION public.gtrgm_picksplit(internal, internal)\n RETURNS internal\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$gtrgm_picksplit$function$\n""},{""name"":""gtrgm_same"",""schema"":""public"",""signature"":""gtrgm_same(gtrgm,gtrgm,internal)"",""definition"":""CREATE OR REPLACE FUNCTION public.gtrgm_same(gtrgm, gtrgm, internal)\n RETURNS internal\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$gtrgm_same$function$\n""},{""name"":""gtrgm_union"",""schema"":""public"",""signature"":""gtrgm_union(internal,internal)"",""definition"":""CREATE OR REPLACE FUNCTION public.gtrgm_union(internal, internal)\n RETURNS gtrgm\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$gtrgm_union$function$\n""},{""name"":""is_admin"",""schema"":""public"",""signature"":""is_admin(uuid)"",""definition"":""CREATE OR REPLACE FUNCTION public.is_admin(p_uid uuid)\n RETURNS boolean\n LANGUAGE sql\n STABLE\nAS $function$\r\n  select exists (select 1 from public.admins a where a.user_id = p_uid);\r\n$function$\n""},{""name"":""search_motos"",""schema"":""public"",""signature"":""search_motos(jsonb)"",""definition"":""CREATE OR REPLACE FUNCTION public.search_motos(f jsonb)\n RETURNS SETOF motos\n LANGUAGE plpgsql\nAS $function$\r\ndeclare\r\n  where_sql text := ' WHERE 1=1';\r\n  sql text;\r\n  v_brand uuid;\r\n  v_year_min int;\r\n  v_year_max int;\r\n  v_price_min numeric;\r\n  v_price_max numeric;\r\n  spec jsonb;\r\n  k text;\r\n  v jsonb;\r\n  cond text;\r\n  vmin numeric;\r\n  vmax numeric;\r\n  vbool boolean;\r\nbegin\r\n  -- Filtres de premier niveau\r\n  if coalesce(f->'filters', '{}'::jsonb) ? 'brand_id' then\r\n    v_brand := (f->'filters'->>'brand_id')::uuid;\r\n    if v_brand is not null then\r\n      where_sql := where_sql || format(' AND m.brand_id = %L::uuid', v_brand);\r\n    end if;\r\n  end if;\r\n\r\n  if coalesce(f->'filters', '{}'::jsonb) ? 'year_min' then\r\n    v_year_min := nullif(f->'filters'->>'year_min','')::int;\r\n    if v_year_min is not null then\r\n      where_sql := where_sql || format(' AND m.year >= %s', v_year_min);\r\n    end if;\r\n  end if;\r\n\r\n  if coalesce(f->'filters', '{}'::jsonb) ? 'year_max' then\r\n    v_year_max := nullif(f->'filters'->>'year_max','')::int;\r\n    if v_year_max is not null then\r\n      where_sql := where_sql || format(' AND m.year <= %s', v_year_max);\r\n    end if;\r\n  end if;\r\n\r\n  if coalesce(f->'filters', '{}'::jsonb) ? 'price_min' then\r\n    v_price_min := nullif(f->'filters'->>'price_min','')::numeric;\r\n    if v_price_min is not null then\r\n      where_sql := where_sql || format(' AND m.price_tnd >= %s', v_price_min);\r\n    end if;\r\n  end if;\r\n\r\n  if coalesce(f->'filters', '{}'::jsonb) ? 'price_max' then\r\n    v_price_max := nullif(f->'filters'->>'price_max','')::numeric;\r\n    if v_price_max is not null then\r\n      where_sql := where_sql || format(' AND m.price_tnd <= %s', v_price_max);\r\n    end if;\r\n  end if;\r\n\r\n  -- Filtres de specs (nested)\r\n  if coalesce(f->'filters', '{}'::jsonb) ? 'specs' then\r\n    spec := f->'filters'->'specs';\r\n    for k, v in select * from jsonb_each(spec) loop\r\n      cond := ' TRUE';\r\n      if (v->>'type') = 'number' then\r\n        vmin := nullif(v->>'min','')::numeric;\r\n        vmax := nullif(v->>'max','')::numeric;\r\n        if vmin is not null then\r\n          cond := cond || format(' AND sv.value_number >= %s', vmin);\r\n        end if;\r\n        if vmax is not null then\r\n          cond := cond || format(' AND sv.value_number <= %s', vmax);\r\n        end if;\r\n        where_sql := where_sql || format(' AND EXISTS (SELECT 1 FROM public.moto_spec_values sv WHERE sv.moto_id = m.id AND sv.spec_item_id = %L::uuid AND %s)', k, cond);\r\n      elsif (v->>'type') = 'boolean' then\r\n        vbool := (v->>'value')::boolean;\r\n        where_sql := where_sql || format(' AND EXISTS (SELECT 1 FROM public.moto_spec_values sv WHERE sv.moto_id = m.id AND sv.spec_item_id = %L::uuid AND sv.value_boolean IS NOT DISTINCT FROM %L)', k, vbool);\r\n      elsif (v->>'type') = 'text' then\r\n        where_sql := where_sql || format(' AND EXISTS (SELECT 1 FROM public.moto_spec_values sv WHERE sv.moto_id = m.id AND sv.spec_item_id = %L::uuid AND sv.value_text = ANY (%L::text[]))', k, array(select jsonb_array_elements_text(v->'values')));\r\n      end if;\r\n    end loop;\r\n  end if;\r\n\r\n  sql := 'SELECT m.* FROM public.motos m' || where_sql || ' ORDER BY m.id DESC LIMIT 60';\r\n  return query execute sql;\r\nend;\r\n$function$\n""},{""name"":""set_limit"",""schema"":""public"",""signature"":""set_limit(real)"",""definition"":""CREATE OR REPLACE FUNCTION public.set_limit(real)\n RETURNS real\n LANGUAGE c\n STRICT\nAS '$libdir/pg_trgm', $function$set_limit$function$\n""},{""name"":""show_limit"",""schema"":""public"",""signature"":""show_limit()"",""definition"":""CREATE OR REPLACE FUNCTION public.show_limit()\n RETURNS real\n LANGUAGE c\n STABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$show_limit$function$\n""},{""name"":""show_trgm"",""schema"":""public"",""signature"":""show_trgm(text)"",""definition"":""CREATE OR REPLACE FUNCTION public.show_trgm(text)\n RETURNS text[]\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$show_trgm$function$\n""},{""name"":""similarity_dist"",""schema"":""public"",""signature"":""similarity_dist(text,text)"",""definition"":""CREATE OR REPLACE FUNCTION public.similarity_dist(text, text)\n RETURNS real\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$similarity_dist$function$\n""},{""name"":""similarity_op"",""schema"":""public"",""signature"":""similarity_op(text,text)"",""definition"":""CREATE OR REPLACE FUNCTION public.similarity_op(text, text)\n RETURNS boolean\n LANGUAGE c\n STABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$similarity_op$function$\n""},{""name"":""similarity"",""schema"":""public"",""signature"":""similarity(text,text)"",""definition"":""CREATE OR REPLACE FUNCTION public.similarity(text, text)\n RETURNS real\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$similarity$function$\n""},{""name"":""strict_word_similarity_commutator_op"",""schema"":""public"",""signature"":""strict_word_similarity_commutator_op(text,text)"",""definition"":""CREATE OR REPLACE FUNCTION public.strict_word_similarity_commutator_op(text, text)\n RETURNS boolean\n LANGUAGE c\n STABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$strict_word_similarity_commutator_op$function$\n""},{""name"":""strict_word_similarity_dist_commutator_op"",""schema"":""public"",""signature"":""strict_word_similarity_dist_commutator_op(text,text)"",""definition"":""CREATE OR REPLACE FUNCTION public.strict_word_similarity_dist_commutator_op(text, text)\n RETURNS real\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$strict_word_similarity_dist_commutator_op$function$\n""},{""name"":""strict_word_similarity_dist_op"",""schema"":""public"",""signature"":""strict_word_similarity_dist_op(text,text)"",""definition"":""CREATE OR REPLACE FUNCTION public.strict_word_similarity_dist_op(text, text)\n RETURNS real\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$strict_word_similarity_dist_op$function$\n""},{""name"":""strict_word_similarity_op"",""schema"":""public"",""signature"":""strict_word_similarity_op(text,text)"",""definition"":""CREATE OR REPLACE FUNCTION public.strict_word_similarity_op(text, text)\n RETURNS boolean\n LANGUAGE c\n STABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$strict_word_similarity_op$function$\n""},{""name"":""strict_word_similarity"",""schema"":""public"",""signature"":""strict_word_similarity(text,text)"",""definition"":""CREATE OR REPLACE FUNCTION public.strict_word_similarity(text, text)\n RETURNS real\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$strict_word_similarity$function$\n""},{""name"":""word_similarity_commutator_op"",""schema"":""public"",""signature"":""word_similarity_commutator_op(text,text)"",""definition"":""CREATE OR REPLACE FUNCTION public.word_similarity_commutator_op(text, text)\n RETURNS boolean\n LANGUAGE c\n STABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$word_similarity_commutator_op$function$\n""},{""name"":""word_similarity_dist_commutator_op"",""schema"":""public"",""signature"":""word_similarity_dist_commutator_op(text,text)"",""definition"":""CREATE OR REPLACE FUNCTION public.word_similarity_dist_commutator_op(text, text)\n RETURNS real\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$word_similarity_dist_commutator_op$function$\n""},{""name"":""word_similarity_dist_op"",""schema"":""public"",""signature"":""word_similarity_dist_op(text,text)"",""definition"":""CREATE OR REPLACE FUNCTION public.word_similarity_dist_op(text, text)\n RETURNS real\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$word_similarity_dist_op$function$\n""},{""name"":""word_similarity_op"",""schema"":""public"",""signature"":""word_similarity_op(text,text)"",""definition"":""CREATE OR REPLACE FUNCTION public.word_similarity_op(text, text)\n RETURNS boolean\n LANGUAGE c\n STABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$word_similarity_op$function$\n""},{""name"":""word_similarity"",""schema"":""public"",""signature"":""word_similarity(text,text)"",""definition"":""CREATE OR REPLACE FUNCTION public.word_similarity(text, text)\n RETURNS real\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pg_trgm', $function$word_similarity$function$\n""}],""extensions"":[{""name"":""pg_stat_statements"",""schema"":""extensions"",""version"":""1.11""},{""name"":""pgcrypto"",""schema"":""extensions"",""version"":""1.3""},{""name"":""uuid-ossp"",""schema"":""extensions"",""version"":""1.1""},{""name"":""pg_graphql"",""schema"":""graphql"",""version"":""1.5.11""},{""name"":""plpgsql"",""schema"":""pg_catalog"",""version"":""1.0""},{""name"":""pg_trgm"",""schema"":""public"",""version"":""1.6""},{""name"":""supabase_vault"",""schema"":""vault"",""version"":""0.3.1""}],""constraints"":{""checks"":[{""table"":""-"",""constraint"":""cardinal_number_domain_check"",""definition"":""CHECK ((VALUE >= 0))""},{""table"":""-"",""constraint"":""yes_or_no_check"",""definition"":""CHECK (((VALUE)::text = ANY ((ARRAY['YES'::character varying, 'NO'::character varying])::text[])))""},{""table"":""auth.oauth_clients"",""constraint"":""oauth_clients_client_name_length"",""definition"":""CHECK ((char_length(client_name) <= 1024))""},{""table"":""auth.oauth_clients"",""constraint"":""oauth_clients_client_uri_length"",""definition"":""CHECK ((char_length(client_uri) <= 2048))""},{""table"":""auth.oauth_clients"",""constraint"":""oauth_clients_logo_uri_length"",""definition"":""CHECK ((char_length(logo_uri) <= 2048))""},{""table"":""auth.one_time_tokens"",""constraint"":""one_time_tokens_token_hash_check"",""definition"":""CHECK ((char_length(token_hash) > 0))""},{""table"":""auth.saml_providers"",""constraint"":""entity_id not empty"",""definition"":""CHECK ((char_length(entity_id) > 0))""},{""table"":""auth.saml_providers"",""constraint"":""metadata_url not empty"",""definition"":""CHECK (((metadata_url = NULL::text) OR (char_length(metadata_url) > 0)))""},{""table"":""auth.saml_providers"",""constraint"":""metadata_xml not empty"",""definition"":""CHECK ((char_length(metadata_xml) > 0))""},{""table"":""auth.saml_relay_states"",""constraint"":""request_id not empty"",""definition"":""CHECK ((char_length(request_id) > 0))""},{""table"":""auth.sso_domains"",""constraint"":""domain not empty"",""definition"":""CHECK ((char_length(domain) > 0))""},{""table"":""auth.sso_providers"",""constraint"":""resource_id not empty"",""definition"":""CHECK (((resource_id = NULL::text) OR (char_length(resource_id) > 0)))""},{""table"":""auth.users"",""constraint"":""users_email_change_confirm_status_check"",""definition"":""CHECK (((email_change_confirm_status >= 0) AND (email_change_confirm_status <= 2)))""},{""table"":""motos"",""constraint"":""motos_year_check"",""definition"":""CHECK (((year >= 1970) AND (year <= 2100)))""},{""table"":""spec_items"",""constraint"":""spec_items_data_type_check"",""definition"":""CHECK ((data_type = ANY (ARRAY['text'::text, 'number'::text, 'boolean'::text, 'json'::text])))""}],""unique_keys"":[{""table"":""auth.identities"",""constraint"":""identities_provider_id_provider_unique"",""definition"":""UNIQUE (provider_id, provider)""},{""table"":""auth.mfa_amr_claims"",""constraint"":""mfa_amr_claims_session_id_authentication_method_pkey"",""definition"":""UNIQUE (session_id, authentication_method)""},{""table"":""auth.mfa_factors"",""constraint"":""mfa_factors_last_challenged_at_key"",""definition"":""UNIQUE (last_challenged_at)""},{""table"":""auth.oauth_clients"",""constraint"":""oauth_clients_client_id_key"",""definition"":""UNIQUE (client_id)""},{""table"":""auth.refresh_tokens"",""constraint"":""refresh_tokens_token_unique"",""definition"":""UNIQUE (token)""},{""table"":""auth.saml_providers"",""constraint"":""saml_providers_entity_id_key"",""definition"":""UNIQUE (entity_id)""},{""table"":""auth.users"",""constraint"":""users_phone_key"",""definition"":""UNIQUE (phone)""},{""table"":""brands"",""constraint"":""brands_name_key"",""definition"":""UNIQUE (name)""},{""table"":""pg_am"",""constraint"":""pg_am_name_index"",""definition"":""UNIQUE (amname)""},{""table"":""pg_amop"",""constraint"":""pg_amop_fam_strat_index"",""definition"":""UNIQUE (amopfamily, amoplefttype, amoprighttype, amopstrategy)""},{""table"":""pg_amop"",""constraint"":""pg_amop_opr_fam_index"",""definition"":""UNIQUE (amopopr, amoppurpose, amopfamily)""},{""table"":""pg_amproc"",""constraint"":""pg_amproc_fam_proc_index"",""definition"":""UNIQUE (amprocfamily, amproclefttype, amprocrighttype, amprocnum)""},{""table"":""pg_attrdef"",""constraint"":""pg_attrdef_adrelid_adnum_index"",""definition"":""UNIQUE (adrelid, adnum)""},{""table"":""pg_attribute"",""constraint"":""pg_attribute_relid_attnam_index"",""definition"":""UNIQUE (attrelid, attname)""},{""table"":""pg_auth_members"",""constraint"":""pg_auth_members_member_role_index"",""definition"":""UNIQUE (member, roleid, grantor)""},{""table"":""pg_auth_members"",""constraint"":""pg_auth_members_role_member_index"",""definition"":""UNIQUE (roleid, member, grantor)""},{""table"":""pg_authid"",""constraint"":""pg_authid_rolname_index"",""definition"":""UNIQUE (rolname)""},{""table"":""pg_cast"",""constraint"":""pg_cast_source_target_index"",""definition"":""UNIQUE (castsource, casttarget)""},{""table"":""pg_class"",""constraint"":""pg_class_relname_nsp_index"",""definition"":""UNIQUE (relname, relnamespace)""},{""table"":""pg_collation"",""constraint"":""pg_collation_name_enc_nsp_index"",""definition"":""UNIQUE (collname, collencoding, collnamespace)""},{""table"":""pg_constraint"",""constraint"":""pg_constraint_conrelid_contypid_conname_index"",""definition"":""UNIQUE (conrelid, contypid, conname)""},{""table"":""pg_conversion"",""constraint"":""pg_conversion_default_index"",""definition"":""UNIQUE (connamespace, conforencoding, contoencoding, oid)""},{""table"":""pg_conversion"",""constraint"":""pg_conversion_name_nsp_index"",""definition"":""UNIQUE (conname, connamespace)""},{""table"":""pg_database"",""constraint"":""pg_database_datname_index"",""definition"":""UNIQUE (datname)""},{""table"":""pg_default_acl"",""constraint"":""pg_default_acl_role_nsp_obj_index"",""definition"":""UNIQUE (defaclrole, defaclnamespace, defaclobjtype)""},{""table"":""pg_enum"",""constraint"":""pg_enum_typid_label_index"",""definition"":""UNIQUE (enumtypid, enumlabel)""},{""table"":""pg_enum"",""constraint"":""pg_enum_typid_sortorder_index"",""definition"":""UNIQUE (enumtypid, enumsortorder)""},{""table"":""pg_event_trigger"",""constraint"":""pg_event_trigger_evtname_index"",""definition"":""UNIQUE (evtname)""},{""table"":""pg_extension"",""constraint"":""pg_extension_name_index"",""definition"":""UNIQUE (extname)""},{""table"":""pg_foreign_data_wrapper"",""constraint"":""pg_foreign_data_wrapper_name_index"",""definition"":""UNIQUE (fdwname)""},{""table"":""pg_foreign_server"",""constraint"":""pg_foreign_server_name_index"",""definition"":""UNIQUE (srvname)""},{""table"":""pg_language"",""constraint"":""pg_language_name_index"",""definition"":""UNIQUE (lanname)""},{""table"":""pg_namespace"",""constraint"":""pg_namespace_nspname_index"",""definition"":""UNIQUE (nspname)""},{""table"":""pg_opclass"",""constraint"":""pg_opclass_am_name_nsp_index"",""definition"":""UNIQUE (opcmethod, opcname, opcnamespace)""},{""table"":""pg_operator"",""constraint"":""pg_operator_oprname_l_r_n_index"",""definition"":""UNIQUE (oprname, oprleft, oprright, oprnamespace)""},{""table"":""pg_opfamily"",""constraint"":""pg_opfamily_am_name_nsp_index"",""definition"":""UNIQUE (opfmethod, opfname, opfnamespace)""},{""table"":""pg_parameter_acl"",""constraint"":""pg_parameter_acl_parname_index"",""definition"":""UNIQUE (parname)""},{""table"":""pg_policy"",""constraint"":""pg_policy_polrelid_polname_index"",""definition"":""UNIQUE (polrelid, polname)""},{""table"":""pg_proc"",""constraint"":""pg_proc_proname_args_nsp_index"",""definition"":""UNIQUE (proname, proargtypes, pronamespace)""},{""table"":""pg_publication"",""constraint"":""pg_publication_pubname_index"",""definition"":""UNIQUE (pubname)""},{""table"":""pg_publication_namespace"",""constraint"":""pg_publication_namespace_pnnspid_pnpubid_index"",""definition"":""UNIQUE (pnnspid, pnpubid)""},{""table"":""pg_publication_rel"",""constraint"":""pg_publication_rel_prrelid_prpubid_index"",""definition"":""UNIQUE (prrelid, prpubid)""},{""table"":""pg_range"",""constraint"":""pg_range_rngmultitypid_index"",""definition"":""UNIQUE (rngmultitypid)""},{""table"":""pg_replication_origin"",""constraint"":""pg_replication_origin_roname_index"",""definition"":""UNIQUE (roname)""},{""table"":""pg_rewrite"",""constraint"":""pg_rewrite_rel_rulename_index"",""definition"":""UNIQUE (ev_class, rulename)""},{""table"":""pg_statistic_ext"",""constraint"":""pg_statistic_ext_name_index"",""definition"":""UNIQUE (stxname, stxnamespace)""},{""table"":""pg_subscription"",""constraint"":""pg_subscription_subname_index"",""definition"":""UNIQUE (subdbid, subname)""},{""table"":""pg_tablespace"",""constraint"":""pg_tablespace_spcname_index"",""definition"":""UNIQUE (spcname)""},{""table"":""pg_transform"",""constraint"":""pg_transform_type_lang_index"",""definition"":""UNIQUE (trftype, trflang)""},{""table"":""pg_trigger"",""constraint"":""pg_trigger_tgrelid_tgname_index"",""definition"":""UNIQUE (tgrelid, tgname)""},{""table"":""pg_ts_config"",""constraint"":""pg_ts_config_cfgname_index"",""definition"":""UNIQUE (cfgname, cfgnamespace)""},{""table"":""pg_ts_dict"",""constraint"":""pg_ts_dict_dictname_index"",""definition"":""UNIQUE (dictname, dictnamespace)""},{""table"":""pg_ts_parser"",""constraint"":""pg_ts_parser_prsname_index"",""definition"":""UNIQUE (prsname, prsnamespace)""},{""table"":""pg_ts_template"",""constraint"":""pg_ts_template_tmplname_index"",""definition"":""UNIQUE (tmplname, tmplnamespace)""},{""table"":""pg_type"",""constraint"":""pg_type_typname_nsp_index"",""definition"":""UNIQUE (typname, typnamespace)""},{""table"":""pg_user_mapping"",""constraint"":""pg_user_mapping_user_server_index"",""definition"":""UNIQUE (umuser, umserver)""},{""table"":""spec_groups"",""constraint"":""spec_groups_name_key"",""definition"":""UNIQUE (name)""},{""table"":""spec_items"",""constraint"":""spec_items_group_id_key_key"",""definition"":""UNIQUE (group_id, key)""},{""table"":""storage.migrations"",""constraint"":""migrations_name_key"",""definition"":""UNIQUE (name)""}],""foreign_keys"":[{""table"":""admins"",""constraint"":""admins_user_id_fkey"",""definition"":""FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE""},{""table"":""auth.identities"",""constraint"":""identities_user_id_fkey"",""definition"":""FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE""},{""table"":""auth.mfa_amr_claims"",""constraint"":""mfa_amr_claims_session_id_fkey"",""definition"":""FOREIGN KEY (session_id) REFERENCES auth.sessions(id) ON DELETE CASCADE""},{""table"":""auth.mfa_challenges"",""constraint"":""mfa_challenges_auth_factor_id_fkey"",""definition"":""FOREIGN KEY (factor_id) REFERENCES auth.mfa_factors(id) ON DELETE CASCADE""},{""table"":""auth.mfa_factors"",""constraint"":""mfa_factors_user_id_fkey"",""definition"":""FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE""},{""table"":""auth.one_time_tokens"",""constraint"":""one_time_tokens_user_id_fkey"",""definition"":""FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE""},{""table"":""auth.refresh_tokens"",""constraint"":""refresh_tokens_session_id_fkey"",""definition"":""FOREIGN KEY (session_id) REFERENCES auth.sessions(id) ON DELETE CASCADE""},{""table"":""auth.saml_providers"",""constraint"":""saml_providers_sso_provider_id_fkey"",""definition"":""FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE""},{""table"":""auth.saml_relay_states"",""constraint"":""saml_relay_states_flow_state_id_fkey"",""definition"":""FOREIGN KEY (flow_state_id) REFERENCES auth.flow_state(id) ON DELETE CASCADE""},{""table"":""auth.saml_relay_states"",""constraint"":""saml_relay_states_sso_provider_id_fkey"",""definition"":""FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE""},{""table"":""auth.sessions"",""constraint"":""sessions_user_id_fkey"",""definition"":""FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE""},{""table"":""auth.sso_domains"",""constraint"":""sso_domains_sso_provider_id_fkey"",""definition"":""FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE""},{""table"":""moto_images"",""constraint"":""moto_images_moto_id_fkey"",""definition"":""FOREIGN KEY (moto_id) REFERENCES motos(id) ON DELETE CASCADE""},{""table"":""moto_spec_values"",""constraint"":""moto_spec_values_item_id_fkey"",""definition"":""FOREIGN KEY (spec_item_id) REFERENCES spec_items(id) ON DELETE CASCADE""},{""table"":""moto_spec_values"",""constraint"":""moto_spec_values_moto_id_fkey"",""definition"":""FOREIGN KEY (moto_id) REFERENCES motos(id) ON DELETE CASCADE""},{""table"":""motos"",""constraint"":""motos_brand_id_fkey"",""definition"":""FOREIGN KEY (brand_id) REFERENCES brands(id) ON DELETE RESTRICT""},{""table"":""spec_items"",""constraint"":""spec_items_group_id_fkey"",""definition"":""FOREIGN KEY (group_id) REFERENCES spec_groups(id) ON DELETE CASCADE""},{""table"":""storage.objects"",""constraint"":""objects_bucketId_fkey"",""definition"":""FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id)""},{""table"":""storage.prefixes"",""constraint"":""prefixes_bucketId_fkey"",""definition"":""FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id)""},{""table"":""storage.s3_multipart_uploads"",""constraint"":""s3_multipart_uploads_bucket_id_fkey"",""definition"":""FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id)""},{""table"":""storage.s3_multipart_uploads_parts"",""constraint"":""s3_multipart_uploads_parts_bucket_id_fkey"",""definition"":""FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id)""},{""table"":""storage.s3_multipart_uploads_parts"",""constraint"":""s3_multipart_uploads_parts_upload_id_fkey"",""definition"":""FOREIGN KEY (upload_id) REFERENCES storage.s3_multipart_uploads(id) ON DELETE CASCADE""}],""primary_keys"":[{""table"":""admins"",""constraint"":""admins_pkey"",""definition"":""PRIMARY KEY (user_id)""},{""table"":""auth.audit_log_entries"",""constraint"":""audit_log_entries_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""auth.flow_state"",""constraint"":""flow_state_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""auth.identities"",""constraint"":""identities_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""auth.instances"",""constraint"":""instances_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""auth.mfa_amr_claims"",""constraint"":""amr_id_pk"",""definition"":""PRIMARY KEY (id)""},{""table"":""auth.mfa_challenges"",""constraint"":""mfa_challenges_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""auth.mfa_factors"",""constraint"":""mfa_factors_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""auth.oauth_clients"",""constraint"":""oauth_clients_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""auth.one_time_tokens"",""constraint"":""one_time_tokens_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""auth.refresh_tokens"",""constraint"":""refresh_tokens_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""auth.saml_providers"",""constraint"":""saml_providers_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""auth.saml_relay_states"",""constraint"":""saml_relay_states_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""auth.schema_migrations"",""constraint"":""schema_migrations_pkey"",""definition"":""PRIMARY KEY (version)""},{""table"":""auth.sessions"",""constraint"":""sessions_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""auth.sso_domains"",""constraint"":""sso_domains_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""auth.sso_providers"",""constraint"":""sso_providers_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""auth.users"",""constraint"":""users_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""brands"",""constraint"":""brands_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""moto_images"",""constraint"":""moto_images_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""moto_spec_values"",""constraint"":""moto_spec_values_pkey"",""definition"":""PRIMARY KEY (moto_id, spec_item_id)""},{""table"":""motos"",""constraint"":""motos_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""pg_aggregate"",""constraint"":""pg_aggregate_fnoid_index"",""definition"":""PRIMARY KEY (aggfnoid)""},{""table"":""pg_am"",""constraint"":""pg_am_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_amop"",""constraint"":""pg_amop_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_amproc"",""constraint"":""pg_amproc_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_attrdef"",""constraint"":""pg_attrdef_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_attribute"",""constraint"":""pg_attribute_relid_attnum_index"",""definition"":""PRIMARY KEY (attrelid, attnum)""},{""table"":""pg_auth_members"",""constraint"":""pg_auth_members_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_authid"",""constraint"":""pg_authid_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_cast"",""constraint"":""pg_cast_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_class"",""constraint"":""pg_class_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_collation"",""constraint"":""pg_collation_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_constraint"",""constraint"":""pg_constraint_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_conversion"",""constraint"":""pg_conversion_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_database"",""constraint"":""pg_database_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_db_role_setting"",""constraint"":""pg_db_role_setting_databaseid_rol_index"",""definition"":""PRIMARY KEY (setdatabase, setrole)""},{""table"":""pg_default_acl"",""constraint"":""pg_default_acl_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_description"",""constraint"":""pg_description_o_c_o_index"",""definition"":""PRIMARY KEY (objoid, classoid, objsubid)""},{""table"":""pg_enum"",""constraint"":""pg_enum_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_event_trigger"",""constraint"":""pg_event_trigger_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_extension"",""constraint"":""pg_extension_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_foreign_data_wrapper"",""constraint"":""pg_foreign_data_wrapper_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_foreign_server"",""constraint"":""pg_foreign_server_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_foreign_table"",""constraint"":""pg_foreign_table_relid_index"",""definition"":""PRIMARY KEY (ftrelid)""},{""table"":""pg_index"",""constraint"":""pg_index_indexrelid_index"",""definition"":""PRIMARY KEY (indexrelid)""},{""table"":""pg_inherits"",""constraint"":""pg_inherits_relid_seqno_index"",""definition"":""PRIMARY KEY (inhrelid, inhseqno)""},{""table"":""pg_init_privs"",""constraint"":""pg_init_privs_o_c_o_index"",""definition"":""PRIMARY KEY (objoid, classoid, objsubid)""},{""table"":""pg_language"",""constraint"":""pg_language_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_largeobject"",""constraint"":""pg_largeobject_loid_pn_index"",""definition"":""PRIMARY KEY (loid, pageno)""},{""table"":""pg_largeobject_metadata"",""constraint"":""pg_largeobject_metadata_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_namespace"",""constraint"":""pg_namespace_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_opclass"",""constraint"":""pg_opclass_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_operator"",""constraint"":""pg_operator_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_opfamily"",""constraint"":""pg_opfamily_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_parameter_acl"",""constraint"":""pg_parameter_acl_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_partitioned_table"",""constraint"":""pg_partitioned_table_partrelid_index"",""definition"":""PRIMARY KEY (partrelid)""},{""table"":""pg_policy"",""constraint"":""pg_policy_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_proc"",""constraint"":""pg_proc_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_publication"",""constraint"":""pg_publication_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_publication_namespace"",""constraint"":""pg_publication_namespace_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_publication_rel"",""constraint"":""pg_publication_rel_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_range"",""constraint"":""pg_range_rngtypid_index"",""definition"":""PRIMARY KEY (rngtypid)""},{""table"":""pg_replication_origin"",""constraint"":""pg_replication_origin_roiident_index"",""definition"":""PRIMARY KEY (roident)""},{""table"":""pg_rewrite"",""constraint"":""pg_rewrite_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_seclabel"",""constraint"":""pg_seclabel_object_index"",""definition"":""PRIMARY KEY (objoid, classoid, objsubid, provider)""},{""table"":""pg_sequence"",""constraint"":""pg_sequence_seqrelid_index"",""definition"":""PRIMARY KEY (seqrelid)""},{""table"":""pg_shdescription"",""constraint"":""pg_shdescription_o_c_index"",""definition"":""PRIMARY KEY (objoid, classoid)""},{""table"":""pg_shseclabel"",""constraint"":""pg_shseclabel_object_index"",""definition"":""PRIMARY KEY (objoid, classoid, provider)""},{""table"":""pg_statistic"",""constraint"":""pg_statistic_relid_att_inh_index"",""definition"":""PRIMARY KEY (starelid, staattnum, stainherit)""},{""table"":""pg_statistic_ext"",""constraint"":""pg_statistic_ext_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_statistic_ext_data"",""constraint"":""pg_statistic_ext_data_stxoid_inh_index"",""definition"":""PRIMARY KEY (stxoid, stxdinherit)""},{""table"":""pg_subscription"",""constraint"":""pg_subscription_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_subscription_rel"",""constraint"":""pg_subscription_rel_srrelid_srsubid_index"",""definition"":""PRIMARY KEY (srrelid, srsubid)""},{""table"":""pg_tablespace"",""constraint"":""pg_tablespace_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_transform"",""constraint"":""pg_transform_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_trigger"",""constraint"":""pg_trigger_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_ts_config"",""constraint"":""pg_ts_config_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_ts_config_map"",""constraint"":""pg_ts_config_map_index"",""definition"":""PRIMARY KEY (mapcfg, maptokentype, mapseqno)""},{""table"":""pg_ts_dict"",""constraint"":""pg_ts_dict_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_ts_parser"",""constraint"":""pg_ts_parser_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_ts_template"",""constraint"":""pg_ts_template_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_type"",""constraint"":""pg_type_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""pg_user_mapping"",""constraint"":""pg_user_mapping_oid_index"",""definition"":""PRIMARY KEY (oid)""},{""table"":""realtime.messages"",""constraint"":""messages_pkey"",""definition"":""PRIMARY KEY (id, inserted_at)""},{""table"":""realtime.schema_migrations"",""constraint"":""schema_migrations_pkey"",""definition"":""PRIMARY KEY (version)""},{""table"":""realtime.subscription"",""constraint"":""pk_subscription"",""definition"":""PRIMARY KEY (id)""},{""table"":""spec_groups"",""constraint"":""spec_groups_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""spec_items"",""constraint"":""spec_items_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""storage.buckets"",""constraint"":""buckets_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""storage.buckets_analytics"",""constraint"":""buckets_analytics_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""storage.migrations"",""constraint"":""migrations_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""storage.objects"",""constraint"":""objects_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""storage.prefixes"",""constraint"":""prefixes_pkey"",""definition"":""PRIMARY KEY (bucket_id, level, name)""},{""table"":""storage.s3_multipart_uploads"",""constraint"":""s3_multipart_uploads_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""storage.s3_multipart_uploads_parts"",""constraint"":""s3_multipart_uploads_parts_pkey"",""definition"":""PRIMARY KEY (id)""},{""table"":""vault.secrets"",""constraint"":""secrets_pkey"",""definition"":""PRIMARY KEY (id)""}]},""generated_at"":""2025-09-02T22:35:56.309239+00:00"",""postgres_version"":""PostgreSQL 17.4 on aarch64-unknown-linux-gnu, compiled by gcc (GCC) 13.2.0, 64-bit"",""materialized_views"":[],""rowcount_estimates"":[{""table"":""admins"",""estimated_rows"":-1},{""table"":""brands"",""estimated_rows"":10},{""table"":""moto_images"",""estimated_rows"":48},{""table"":""moto_spec_values"",""estimated_rows"":1851},{""table"":""motos"",""estimated_rows"":30},{""table"":""spec_groups"",""estimated_rows"":11},{""table"":""spec_items"",""estimated_rows"":62}]}"